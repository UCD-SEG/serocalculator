---
title: "typhoid_results"
format: html
---



```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r setup}
# library(devtools)
# install_github("UCD-SERG/serocalculator")
library(serocalculator)
library(tidyverse)
```

```{r longdata}

# pop data
csdata <- load_pop_data(
  file_path = "https://osf.io/download//n6cp3/",
  age = "Age",
  value = "result",
  id = "index_id",
  standardize = TRUE
) %>% 
  filter(Country == "Bangladesh") %>% 
  select(age, antigen_iso, value)
  

# get curve data
lnpars <- load_curve_params("https://osf.io/download/rtw5k/") %>% 
  mutate(
    d = r - 1
  ) %>% 
  select(alpha, y1, d)
```

``` {r simdata}
# get noise data
cond <- load_noise_params("https://osf.io/download//hqy4v/") %>% 
  filter(Country == "Bangladesh") %>% 
  select(nu, eps, y.low, y.high)
  
```


```{r seroinc}
start <- .05

lambda <- start # initial estimate: starting value
log.lambda <- log(lambda)
log.lmin <- log(lambda / 10)
log.lmax <- log(10 * lambda)



objfunc <- function(llam) {
  return(res <- fdev(lambda, xs_data, lnpars, cond))
}


fit <- nlm(
  objfunc,
  p = log.lambda,
  hessian = TRUE,
  print.level = 0,
  stepmax = 1,
  iterlim = 100
)

typhoid_results <- fit %>%
  summary.seroincidence(
    coverage = .95,
    start = start
  ) %>%
  mutate(
    ageCat = NULL,
    antigen.iso = paste(collapse = "+", "HlyE_IgG")
  ) %>%
  structure(noise.parameters = cond)

usethis::use_data(typhoid_results, internal = TRUE, overwrite = TRUE)
```
