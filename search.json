[{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Seroincidence package installation manual","text":"Package serocalculator written programming language R end user must access working installation R engine. document describes common setup R installed locally user’s computer. screenshots refer classical R interface, package can also opened Graphical User Interfaces fo R like e.g.  RStudio.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"installation-steps","dir":"Articles","previous_headings":"","what":"2. Installation steps","title":"Seroincidence package installation manual","text":"R free software can downloaded http://cran.r-project.org/. Latest version writing document R 3.5.0. appropriate, operating system dependent, version downloaded, install computer following standard procedure applicable operating system. Windows file downloaded -called base distribution: http://cran.r-project.org/bin/windows/base/.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"installing-r","dir":"Articles","previous_headings":"2. Installation steps","what":"2.1. Installing R","title":"Seroincidence package installation manual","text":"Start R installer follow presented steps:  advised R installed folder contain spaces, therefore please adjust destination location accordingly:  seroincidence package compatible 32-bit 64-bit version R. Choose preferred platform (). unsure install 32-bit version , however compatible platforms 64-bit version may provide better performance:  advised select Registry entries next step best experience:  R interpreter, installed Windows, can invoked start menu folder named R. Start preferred version R (32-bit: R i386 64-bit: x64 installed). Graphical user interface R interpreter start new window:","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"installing-seroincidence-package","dir":"Articles","previous_headings":"2. Installation steps","what":"2.2. Installing seroincidence package","title":"Seroincidence package installation manual","text":"Since new installation R, serocalculator package must installed first use. package can installed either menu option graphical user interface (GUI) command executed R console. options presented:","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"package-installation-from-the-graphical-user-interface","dir":"Articles","previous_headings":"2. Installation steps > 2.2. Installing seroincidence package","what":"2.2.1. Package installation from the graphical user interface","title":"Seroincidence package installation manual","text":"Download seroincidence calculator package ECDC website: https://github.com/UCD-SEG/serocalculator,https://ucd-seg.github.io/serocalculator/. Two versions package made available: binary package (seroincidence_[version].zip) - Microsoft Windows compatible Source package (seroincidence_[version].tar.gz) - cross-platform compatible (MS Windows, Linux, MacOS) operating system Windows best download Windows binary package. Go menu Packages select command Install package(s) local files…:  Select package file click “Open”:  Post-installation message appear:  package now installed R.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"package-installation-from-r-console","dir":"Articles","previous_headings":"2. Installation steps > 2.2. Installing seroincidence package","what":"2.2.2. Package installation from R console","title":"Seroincidence package installation manual","text":"Alternatively, installation package can also performed executing one following commands R console:","code":"# OPTION A # Install Windows binary package \"seroincidence\" directly from internet ECDC website: install.packages(     pkgs = \"http://ecdc.europa.eu/en/data-tools/seroincidence-calculator-tool/Documents/                 serocalculator_0.1.0.9000.zip\",     repos = NULL, type = \"win.binary\")  # OPTION B # Install source package directly from internet CRAN repository: install.packages(\"seroincidence\")  # OPTION C # Install Windows binary package from a local file: #   install.packages(\"[PATH/TO/FILE/]seroincidence_[version].zip\",  #                       repos = NULL, type = \"win.binary\") # For instance: install.packages(pkgs = \"C:/serocalculator_0.1.0.9000.zip\", repos = NULL, type = \"win.binary\")  # OPTION D # Install source package from a local file: install.packages(pkgs = \"C:/serocalculator_0.1.0.9000.tar.gz\", repos = NULL, type = \"source\")"},{"path":"https://ucd-seg.github.io/serocalculator/articles/installation.html","id":"post-installation","dir":"Articles","previous_headings":"","what":"3. Post-installation","title":"Seroincidence package installation manual","text":"Successful installation can confirmed loading package workspace exploring help files manuals distributed package: Additionally, package details can found executing following commands:","code":"# Load package \"seroincidence\". library(serocalculator)  # Show R help for the package. ?serocalculator  # Show tutorial for the package. vignette(topic = \"tutorial\", package = \"serocalculator\") # Show description. packageDescription(\"serocalculator\") ## Package: serocalculator ## Type: Package ## Title: Estimating Infection Rates from Serological Data ## Version: 0.1.0.9000 ## Date: 2022-03-29 ## Authors@R: c( person(given = \"Peter\", family = \"Teunis\", email = ##         \"p.teunis@emory.edu\", role = c(\"aut\", \"cph\"), comment = \"Author ##         of the method and original code.\"), person(given = \"Jan\", ##         family = \"van Eijkeren\", role = c(\"ctb\"), comment = \"Author of ##         the method and original code.\"), person(given = \"Daniel\", ##         family = \"Lewandowski\", email = \"daniel@nextpagesoft.net\", role ##         = c(\"ctb\"), comment = \"Creator of the `seroincidence` R ##         package.\"), person(given = \"Chantal\", family = \"Quinten\", email ##         = \"seroincidence@ecdc.europa.eu\", role = c(\"ctb\")), ##         person(given = \"Kristen\", family = \"Aiemjoy\", email = ##         \"kaiemjoy@ucdavis.edu\", role = c(\"aut\", \"ctb\")), person(given = ##         \"Douglas Ezra\", family = \"Morrison\", email = ##         \"demorrison@ucdavis.edu\", role = c(\"aut\", \"ctb\", \"cre\"), ##         comment = \"Package maintainer.\")) ## Description: Translates antibody levels measured in a (cross-sectional) ##         population sample into an estimate of the frequency with which ##         seroconversions (infections) occur in the sampled population. ##         Fork of the \"seroincidence\" package v2.0.0 on CRAN ##         (https://cran.r-project.org/web/packages/seroincidence/index.html) ## Depends: R (>= 2.10) ## License: GPL-3 ## Imports: dplyr, Rcpp, stats, utils ## Suggests: knitr, rmarkdown, parallel, pander, Hmisc, tidyverse ## VignetteBuilder: knitr ## LazyData: true ## Encoding: UTF-8 ## URL: https://github.com/UCD-SEG/serocalculator, ##         https://ucd-seg.github.io/serocalculator/ ## RoxygenNote: 7.1.2 ## NeedsCompilation: yes ## LinkingTo: Rcpp ## Language: en-US ## Packaged: 2022-04-12 09:53:45 UTC; runner ## Author: Peter Teunis [aut, cph] (Author of the method and original ##         code.), Jan van Eijkeren [ctb] (Author of the method and ##         original code.), Daniel Lewandowski [ctb] (Creator of the ##         `seroincidence` R package.), Chantal Quinten [ctb], Kristen ##         Aiemjoy [aut, ctb], Douglas Ezra Morrison [aut, ctb, cre] ##         (Package maintainer.) ## Maintainer: Douglas Ezra Morrison <demorrison@ucdavis.edu> ## Built: R 4.1.3; x86_64-pc-linux-gnu; 2022-04-12 09:53:45 UTC; unix ## RemotePkgRef: local::. ## RemoteType: local ##  ## -- File: /home/runner/work/_temp/Library/serocalculator/Meta/package.rds # Show citation. citation(\"serocalculator\") ##  ## To cite package 'serocalculator' in publications use: ##  ##   Peter Teunis, Kristen Aiemjoy and Douglas Ezra Morrison (2022). ##   serocalculator: Estimating Infection Rates from Serological Data. ##   https://github.com/UCD-SEG/serocalculator, ##   https://ucd-seg.github.io/serocalculator/. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Manual{, ##     title = {serocalculator: Estimating Infection Rates from Serological Data}, ##     author = {Peter Teunis and Kristen Aiemjoy and Douglas Ezra Morrison}, ##     year = {2022}, ##     note = {https://github.com/UCD-SEG/serocalculator, ## https://ucd-seg.github.io/serocalculator/}, ##   }"},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Seroincidence package methodology","text":"revised seroincidence calculator package provides three refinements method calculating seroincidence published earlier (Teunis et al. 2012) implemented R package seroincidence, versions 1.x: (1) inclusion infection episode rising antibody levels, (2) non–exponential decay serum antibodies infection, (3) age–dependent correction subjects never seroconverted. important note , although implemented methods use specific parametric model, proposed (de Graaf et al. 2014) augmented (Teunis et al. 2016), methods used calculate likelihood function allow seroresponses arbitrary shape.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"a-simple-model-for-the-seroresponse","dir":"Articles","previous_headings":"","what":"1. A simple model for the seroresponse","title":"Seroincidence package methodology","text":"current version seroincidence package uses model (Teunis et al. 2016) shape seroresponse: \\[ \\begin{array}{l@{\\qquad}l} \\text{Infection/colonization episode} & \\text{Waning immunity episode}\\\\ b^{\\prime}(t) = \\mu_{0}b(t) - cy(t) & b(t) = 0 \\\\ y^{\\prime}(t) = \\mu y(t) & y^{\\prime}(t) = -\\nu y(t)^r \\\\ \\end{array} \\] baseline antibody concentration \\(y(0) = y_{0}\\) initial pathogen concentration \\(b(0) = b_{0}\\). serum antibody response \\(y(t)\\) can written \\[ y(t) = y_{+}(t) + y_{-}(t) \\] \\[\\begin{align*} y_{+}(t) & = y_{0}\\text{e}^{\\mu t}[0\\le t <t_{1}]\\\\ y_{-}(t) & = y_{1}\\left(1+(r-1)y_{1}^{r-1}\\nu(t-t_{1})\\right)^{-\\frac{1}{r-1}}[t_{1}\\le t < \\infty] \\end{align*}\\] Since peak level \\(y_{1} = y_{0}\\text{e}^{\\mu t_{1}}\\) (unobservable) growth rate \\(\\mu\\) can written \\[\\mu = \\frac{1}{t_{1}}\\log\\left(\\frac{y_{1}}{y_{0}}\\right)\\] Antibody decay different exponential (log–linear) decay. shape parameter \\(r > 1\\), log concentrations decrease rapidly infection terminated, decay slows low antibody concentrations maintained long period. \\(r\\) approaches 1, exponential decay restored.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"backward-recurrence-time","dir":"Articles","previous_headings":"","what":"2. Backward recurrence time","title":"Seroincidence package methodology","text":"Considering (fundamental) uniform distribution \\(u_{f}\\) sampling within given interval, interval length distribution \\(p(\\Delta t)\\) distribution (cross–sectionally) sampled interval length (Teunis et al. 2012) \\[ q(\\Delta t) = \\frac{p(\\Delta t)\\cdot\\Delta t}{\\overline{\\Delta t_{p}}} \\] joint distribution backward recurrence time cross–sectional interval length product \\(u_{f}\\cdot q\\) probabilities independent. distribution backward recurrence time marginal distribution \\[\\begin{align*} u(\\tau) & = \\int_{\\Delta t=0}^{\\infty} u_{f}(\\tau;\\Delta t)\\cdot q(\\Delta t)\\text{d}\\Delta t\\\\         & = \\int_{0}^{\\infty}\\frac{[0\\le\\tau\\le\\Delta t]}{\\Delta t}\\cdot \\frac{p(\\Delta t)\\cdot             \\Delta t}{\\overline{\\Delta t_{p}}}\\text{d}\\Delta t\\\\         & = \\frac{1}{\\overline{\\Delta t_{p}}}\\int_{\\tau}^{\\infty}p(\\Delta t)\\text{d}\\Delta t \\end{align*}\\]","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"incidence-of-seroconversions","dir":"Articles","previous_headings":"","what":"3. Incidence of seroconversions","title":"Seroincidence package methodology","text":"calculate incidence seroconversions, (Teunis et al. 2012), distribution \\(p(\\Delta t)\\) intervals \\(\\Delta t\\) seroconversions, important. Assuming subject sampled completely random intervals seroconversions, accounting interval length bias (Satten et al. 2004; Zelen 2004), distribution backward recurrence times \\(\\tau\\) can written (Teunis et al. 2012) \\[ u(\\tau) = \\frac{1}{\\overline{\\Delta t}} \\int_{\\tau=0}^{\\infty}p(\\Delta t)\\text{d}\\Delta t          = \\frac{1-P(\\Delta t)}{\\overline{\\Delta t}} \\] \\(\\overline{\\Delta t}\\) \\(p\\)–distribution expected value \\(\\Delta t\\). density employed estimate seroconversion rates. antibody concentration \\(y\\) observable quantity, need express probability (density) observed \\(y\\) terms density backward recurrence time. First, backward recurrence time can \\(\\tau\\) expressed function serum antibody concentration \\(y\\) \\[ \\tau(y) = \\tau_{+}(y) + \\tau_{-}(y) \\] \\[\\begin{align*} \\tau_{+}(y) & = \\displaystyle{\\frac{1}{\\mu}} \\log\\left(\\displaystyle{\\frac{y_{+}}{y_{0}}}\\right) [0\\le \\tau<t_{1}]\\\\ \\tau_{-}(y) & = \\left(t_{1} + \\displaystyle{\\frac{y_{-}^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}}\\right)[t_{1}\\le \\tau < \\infty] \\end{align*}\\] corresponding derivatives \\[ \\frac{\\text{d}\\tau_{+}}{\\text{d}y} = \\frac{1}{\\mu y_{+}} \\quad \\text{ } \\quad \\frac{\\text{d}\\tau_{-}}{\\text{d}y} = - \\frac{1}{\\nu y_{-}^{r}} \\] Now, consider probability antibody level \\(y^{\\prime}\\), corresponding time since infection \\(\\tau^{\\prime}\\), less equal \\(y\\) (see Figure ) \\[\\begin{align*} P(y^{\\prime} \\le y) & = P\\left(y_{0} \\le y_{+}(\\tau^{\\prime})\\le y_{+}(\\tau) \\vee y_{-}(\\tau^{\\prime})                          \\le y_{-}(\\tau) \\le t_{1}\\right) + [y_{1} < y]\\\\                     & = P\\left(0 \\le \\tau^{\\prime}\\le \\frac{1}{\\mu}                          \\log\\left(\\frac{y_{+}}{y_{0}}\\right)\\right)\\\\                     &   \\qquad {} + P\\left(t_{1}+\\frac{y_{-}^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)} \\le                          \\tau^{\\prime} < \\infty\\right) + [y_{1} < y] \\end{align*}\\] probability density \\(y\\) \\[\\begin{align*} \\rho(y) & = \\frac{\\text{d}}{\\text{d}y} P(y^{\\prime}\\le y)\\\\         & = \\frac{\\text{d}}{\\text{d}\\tau_{+}}\\frac{\\text{d}\\tau_{+}}{\\text{d}y_{+}}              P\\left(0\\le\\tau^{\\prime}\\le\\tau_{+}(y)\\right) +             \\frac{\\text{d}}{\\text{d}\\tau_{-}}\\frac{\\text{d}\\tau_{-}}{\\text{d}y_{-}}              P\\left(t_{1}+\\tau_{-}(y)\\le\\tau^{\\prime}<\\infty\\right)\\\\         & = \\rho_{+}(y_{+}) + \\rho_{-}(y_{-}) \\end{align*}\\] \\[\\begin{equation}\\label{rho_y} \\begin{aligned} \\rho_{+}(y_{+}) & = \\displaystyle{\\frac{1}{\\mu y_{+}}} u\\left(\\displaystyle{\\frac{1}{\\mu}}\\log\\left(\\displaystyle{\\frac{y_{+}}{y_{0}}}\\right)\\right)\\\\ \\rho_{-}(y_{-}) & = \\displaystyle{\\frac{1}{\\nu y_{-}^{r}}} u\\left(t_{1} + \\displaystyle{\\frac{y_{-}^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}}\\right) \\end{aligned} \\end{equation}\\] \\([y_{0} \\le y < y_{1}]\\) two contributions density, one rising one decaying branch antibody response. , assumed (Teunis et al. 2012), intervals incident infections generated process Gamma probability density, \\(\\overline{\\Delta t} = (m+1)/\\lambda\\). cumulative distribution function \\(\\tau\\) \\[\\begin{equation}\\label{pm_cumul} P_{m}(\\tau) = 1-\\frac{\\Gamma(m+1, \\lambda\\tau)}{m!} \\end{equation}\\] density backward recurrence times \\[\\begin{equation}\\label{bwrectime_pdf} u_{m}(\\tau) = \\frac{1-P_{m}(\\tau)}{\\overline{\\Delta t}} =   \\frac{\\lambda\\Gamma(m+1,\\lambda\\tau)}{(m+1)!} =   \\frac{\\lambda\\text{e}^{-\\lambda\\tau}}{m+1}   \\sum_{j=0}^{m}\\frac{(\\lambda\\tau)^{j}}{j!} \\end{equation}\\] Combining equations   marginal density \\(y\\) can found \\[\\begin{equation} \\label{margdist_y_increase} \\rho_{+}(y_{+}) = [y_{0} \\le y_{+} < y_{1}] \\frac{\\lambda y_{0}}{\\mu(m+1)}                   \\left(\\frac{y_{+}}{y_{0}}\\right)^{-(1+\\lambda/\\mu)}                   \\sum_{j=0}^{m} \\frac{\\left(\\frac{\\lambda}{\\mu}\\log(y_{+}/y_{0})\\right)^{j}}{j!} \\end{equation}\\] \\[\\begin{align}\\label{margdist_y_decay} \\rho_{-}(y_{-}) & = [0< y_{-} \\le y_{1}] \\frac{\\lambda}{\\nu y_{-}^{r}(m+1)}                      \\text{e}^{-\\lambda\\left(t_{1}+\\frac{y_{-}^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}\\right)} \\nonumber\\\\                 &   \\qquad {} \\times\\sum_{j=0}^{m}\\frac{\\lambda^{j}}{j!}\\left(t_{1}+                     \\frac{y_{-}^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}\\right)^{j} \\end{align}\\] \\(\\rho_{+}\\) \\(\\rho_{-}\\) refer contributions rising decaying part seroresponse density \\(y\\). within–host parameters \\(\\boldsymbol{\\theta} = (y_{0}, y_{1}, t_{1}, \\nu, r)\\) vary among responses individual subjects. Heterogeneity parameters may described joint distribution, can used calculate marginal distribution \\(\\rho(y)\\) (Teunis et al. 2012). Since Monte Carlo sample posterior joint distribution available longitudinal model (Teunis et al. 2016) marginal distribution \\(\\rho(y)\\) may approximated sum \\[\\begin{equation}\\label{rho_numsum} \\rho(y) = \\frac{1}{N}\\sum_{n=1}^{N} \\rho_{+}(y\\vert \\lambda, m, \\boldsymbol{\\theta}_{n}) +            \\rho_{-}(y\\vert \\lambda, m, \\boldsymbol{\\theta}_{n}) \\end{equation}\\] Monte Carlo sample \\((\\boldsymbol{\\theta}_{1}, \\boldsymbol{\\theta}_{2}, \\dots, \\boldsymbol{\\theta}_{N})\\). cross–sectional sample antibody concentrations \\((Y_{1}, Y_{2}, \\dots, Y_{K})\\) can now used calculate likelihood \\[ \\ell(\\lambda,m) = \\prod_{k=1}^{K}\\rho(Y_{k}\\vert \\lambda, m) \\] can used estimate \\((\\lambda, m)\\).","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"true-seronegative-subjects","dir":"Articles","previous_headings":"","what":"4. True seronegative subjects","title":"Seroincidence package methodology","text":"time cross–sectional serum sample collected, subject whose blood drawn may never infected lifetime. antibody concentration \\(y\\) sample represents true seronegative. sample, backward recurrence time exist. given longitudinal response, backward recurrence time \\(\\tau\\) corresponding measured antibody concentration \\(Y\\) can calculated. backward recurrence time longer age person (time sampling), antibody concentration \\(Y\\) resulted prior seroconversion. , summation equation , terms satisfying condition \\(\\tau(y) < \\) discarded, resulting partial sum \\[ \\rho^{\\ast}(y,) = \\frac{1}{N}\\sum_{n=1}^{N}[\\tau(y,\\boldsymbol{\\theta}_{n}) < ]                    (\\rho_{+}(y\\vert\\lambda,m,\\boldsymbol{\\theta}_{n}) +                    (\\rho_{-}(y\\vert\\lambda,m,\\boldsymbol{\\theta}_{n}) \\] counts seroconversions can occurred lifespan person whose serum sampled. Serum true seronegative subject expected low antibody concentration, representative ``true’’ negative sample (de Greeff et al. 2012). antibody concentrations \\(y\\) sera truly negative subjects expected decay time: baseline distribution \\(\\rho_{0}(y)\\) may assumed fixed independent \\(m\\) \\(\\lambda\\). Note also \\(y\\) corresponds backward recurrence time within lifespan person, antibody concentration \\(y\\) still result baseline distribution \\(\\rho_{0}(y)\\). Given interval distribution incident infections, probability sampled subject never seroconverted depends age. gamma process assumed , survival function \\(P_{m}(\\vert m, \\lambda)\\) gives probability subject seroconverted age \\(\\) (equation ). Thus, serum sample antibody concentration \\(y\\) subject age \\(\\) probability density \\[ \\psi (\\lambda, m\\vert y, , \\boldsymbol{\\theta}, \\boldsymbol{\\theta}_{0}) = \\rho^{\\ast}(y, ) + P_{m}(\\vert m, \\lambda)\\rho_{0}(y\\vert \\boldsymbol{\\theta}_{0}) \\] seroconversion rate low, subject young, , probability true negative may considerable.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"censored-observations","dir":"Articles","previous_headings":"","what":"5. Censored observations","title":"Seroincidence package methodology","text":"case observations censored \\(y_{c}\\) observed \\(Y = \\max(Y,y_{c})\\), \\(y_{c} < Y\\) density \\(\\rho(y)\\) equations   holds, likelihood \\(Y \\le y_{c}\\) can calculated \\[ \\ell(\\lambda, m \\vert y \\le y_{c}) = \\int_{z=0}^{y_{c}} \\rho(z, \\lambda, m) \\text{d}z = R(y_{c}\\vert\\lambda,m) \\] need cumulative distribution \\(R(y)\\) backward recurrence time, equation . \\[ U_{m}(\\tau) = \\frac{1}{m+1}\\sum_{j=0}^{m} P_{j}(\\tau\\vert\\lambda) \\] cumulative distribution antibody levels \\(y\\) \\[\\begin{align*} P(y^{\\prime} \\le y) & = U\\left(\\frac{1}{\\mu}\\log\\left(\\frac{y}{y_{0}} \\right)\\right) [y_{0}\\le y < y_{1}] +\\\\                     &   \\qquad {} \\left(1-U\\left(t_{1}+\\frac{y^{-(r-1)}-y_{1}^{-(r-1)}}                         {\\nu(r-1)}\\right)\\right) [y\\le y_{1}] + [y_{1} < y] \\end{align*}\\] \\[\\begin{align*} R(y) & = \\frac{1}{m+1}\\sum_{j=0}^{m}P_{j} \\left(\\frac{1}{\\mu}\\log          \\left(\\frac{y}{y_{0}}\\right)\\vert\\lambda\\right) [y_{0} \\le y < y_{1}]\\\\      &   \\qquad {} + \\left(1 - \\frac{1}{m+1}\\sum_{j=0}^{m}P_{j}\\left(t_{1}+          \\frac{y^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}\\vert\\lambda\\right)\\right)[y \\le y_{1}]\\\\      &   \\qquad {} + [y_{1} < y] \\end{align*}\\] Using equation  can written terms incomplete gamma functions \\[\\begin{align*} R(y) & = \\frac{1}{m+1}\\sum_{j=0}^{m}  \\left(1-\\frac{\\Gamma\\left(j+1,\\frac{\\lambda}{\\mu}          \\log\\left(\\frac{y}{y_{0}}\\right)\\right)}{j!}\\right) [y_{0} \\le y < y_{1}]\\\\      &   \\qquad {} + \\left(1-\\frac{1}{m+1}\\sum_{j=0}^{m} \\left(1-\\frac{\\Gamma\\left(j+1,\\lambda\\left(t_{1} +          \\frac{y^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}\\right)\\right)}{j!}\\right)\\right)[y < y_{1}]\\\\      &   \\qquad {} + [y_{1} < y] \\end{align*}\\] \\[\\begin{align*} R(y) & = \\left(1-\\frac{1}{m+1}\\sum_{j=0}^{m} \\frac{\\Gamma\\left(j+1,\\frac{\\lambda}{\\mu}           \\log\\left(\\frac{y}{y_{0}}\\right)\\right)}{j!}\\right) [y_{0} \\le y < y_{1}]\\\\      &   \\qquad {} + \\frac{1}{m+1}\\sum_{j=0}^{m} \\frac{\\Gamma\\left(j+1,\\lambda\\left(t_{1} +           \\frac{y^{-(r-1)}-y_{1}^{-(r-1)}}{\\nu(r-1)}\\right)\\right)}{j!} [y < y_{1}]\\\\      &   \\qquad {} + [y_{1} < y] \\end{align*}\\]","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/methodology.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Seroincidence package methodology","text":"de Graaf, W. F., M. E. E. Kretzschmar, P. F. M. Teunis, O. Diekmann. 2014. “Two-Phase Within-Host Model Immune Response Application Serological Profiles Pertussis.” Epidemics 9 (December): 1–7. https://doi.org/10.1016/j.epidem.2014.08.002. de Greeff, S. C., P. F. M. Teunis, H. E. de Melker, F. R. Mooi, D. W. Notermans, B. Elvers, J. F. P. Schellekens. 2012. “Two-Component Cluster Analysis Large Serodiagnostic Database Specificity Increases IgG Antibodies Pertussis Toxin Paired Serum Samples Absolute Values Single Serum Samples.” Clinical Vaccine Immunology 19 (9). https://doi.org/10.1128/CVI.00229-12. Satten, G. ., F. Kong, D. J. Wright, S. . Glynn, G. B. Schreiber. 2004. “Special ‘Special’ Interval: Modeling Departure Length‐biased Sampling Renewal Processes.” Biostatistics 5 (1). https://doi.org/10.1093/biostatistics/5.1.145. Teunis, P. F. M., J. C. van Eijkeren, C. W. Ang, Y. T. van Duynhoven, J. B. Simonsen, M. . Strid, W. van Pelt. 2012. “Biomarker Dynamics: Estimating Infection Rates Serological Data.” Statistics Medicine 31 (20): 2240–8. https://doi.org/10.1002/sim.5322. Teunis, P. F. M., J. C. van Eijkeren, W. F. de Graaf, . Bonačić Marinović, M. E. E. Kretzschmar. 2016. “Linking Seroresponse Infection Within-Host Heterogeneity Antibody Production.” Epidemics 16 (September). https://doi.org/10.1016/j.epidem.2016.04.001. Zelen, M. 2004. “Forward Backward Recurrence Times Length Biased Sampling: Age Specific Models.” Lifetime Data Analysis 10 (4).","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Serocalculator package tutorial","text":"Antibody levels measured (cross–sectional) population sample can translated estimate frequency seroconversions (infections) occur sampled population. simple terms: presence many high antibody concentrations indicates many subjects likely experienced infection recently, mostly low concentrations indicate low frequency infections sampled population. information ELISA methods can found ECDC web site. order thus interpret measured cross-sectional antibody concentrations, characteristics time course serum antibody response must known. antibody detected cross–sectional sample, quantitative description dynamics following infection (seroconversion elevated concentration, followed gradual decrease) must available. published studies, information time course serum antibody response obtained follow–data subjects symptomatic episode following infection. onset symptoms thus provided proxy time infection occurred. Care must taken longitudinal cross–sectional measurements antibody concentrations calibrated scale (, preferably, expressed identical units). time course serum antibody response infection assumed generic: anyone infected pathogen expected produce response similar seen symptomatic cohort used follow–study. Thus, strategy set longitudinal model follow–study , use thus obtained information analyze many different cross–sectional data sets. Note must assumed variation time course antibody concentrations among individuals observed longitudinal cohort population cross-sectional sample taken, variation observed. Analysis longitudinal data estimation required parameters separated estimation seroincidences, (1) longitudinal data sets available difficult (expensive) obtain, (2) longitudinal models may considered generic, presumably describing physiological phenomenon similiar infected individual, (3) setting running longitudinal model requires additional skills, necessary use sero–incidence calculator script","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"the-seroincidence-estimator","dir":"Articles","previous_headings":"","what":"2. The seroincidence estimator","title":"Serocalculator package tutorial","text":"Package seroincidence designed calculate incidence seroconversion, using longitudinal seroresponse characteristics. distribution serum antibody concentrations cross–sectional population sample calculated, function (longitudinal) seroresponse frequency seroconversion (seroincidence). Given seroresponse, (marginal) distribution antibody concentrations can fitted cross-sectional data, adjusting seroconversion frequency, thus providing means estimate seroconversion frequency.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"time-course-of-serum-antibodies","dir":"Articles","previous_headings":"2. The seroincidence estimator","what":"2.1 Time course of serum antibodies","title":"Serocalculator package tutorial","text":"seroresponse, time course serum antibodies following seroconversion (infection) described means set parameters describing . parameters may include: baseline antibody concentration, time reach peak antibody concentration, magnitude peak concentration, antibody decay parameters describing time course (shape rate) antibody decay. model description used serocalculator described (Simonsen et al. 2009; Teunis et al. 2012). alternative model, simplified improved interpretation underlying biological mechanisms, given (de Graaf et al. 2014) improved (Teunis et al. 2016). current model assumes upon exposure initial inoculum, pathogen concentrations increase exponentially. Presence pathogens (antigen presented immune system) signals increase antibody production, resulting exponentially increasing serum antibody concentrations. Increased activity immune system, signalled circulating antibodies, causes inactivation die–pathogens, rate proportional serum antibody concentration. Ultimately, pathogens removed, infection promotion antibody production stops. decay phase starts, serum antibody concentrations decrease. Antibody decay serum compartment may start fast slow later, resulting non–exponential decay. (Teunis et al. 2016) modelled using shape parameter, allowing gradual adjustment exponential (log–linear) strongly non–exponential decay.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"heterogenity","dir":"Articles","previous_headings":"2. The seroincidence estimator","what":"2.2 Heterogenity","title":"Serocalculator package tutorial","text":"five parameters describing seroresponse (round brackets names corresponding parameters used package, see section 3.2.2 details): baseline antibody concentration (y0 yb), time peak (t1), peak antibody concentration (y1), decay rate (alpha) shape factor decay curve (r) fixed numbers. population subjects, individuals seroresponse, different subjects. Therefore, parameters provided (joint) distribution, describing variation among individuals sampled population. course, distribution depends pathogen, detected antibody, even detection assay. Estimates seroresponse parameters may obtained fitting model longitudinal data. Typically, data collected patients confirmed infection, time infection detected appearance symptoms. Ideally, blood samples taken several times post infection, period long enough reliably estimate shape serum antibody decay curve. Bayesian hierarchical framework allows individual variation seroresponses, one obtains (posterior) joint distribution parameters (Markov chain) Monte Carlo sample, relevant parameters (Teunis et al. 2016). Note , due limited number iterations Monte Carlo sample, generated incidence estimates show minor variations: calculation run twice, outcomes may differ slightly. variation smaller, size Monte Carlo sample may increased. however slow calculations.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"incidence-estimation","dir":"Articles","previous_headings":"2. The seroincidence estimator","what":"2.3 Incidence estimation","title":"Serocalculator package tutorial","text":"longitudinal seroresponses considered generic: represent time course (specific) human serum antibodies (specific) pathogen. Therefore, cross–sectional sample antibodies human population, incidence estimate can calculated. Given longitudinal response characteristics, seroincidence R package provide rapid computationally simple method calculating seroconversion rates, published (Teunis et al. 2012). methods seroincidence calculator based developed publicly funded research. procedures published open general public, including core script seroincidence calculator based. make functionalities provided broadly available possible, R chosen computing platform, free open source, runs modern computer operating system.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"model-variants","dir":"Articles","previous_headings":"2. The seroincidence estimator","what":"2.4 Model variants","title":"Serocalculator package tutorial","text":"package contains longitudinal models seroincidence calculations. Four model variants possible, depending whether seroconversion instantaneous (\\(t_{1} = 0\\)) (\\(t_{1} > 0\\)), whether decay exponential (\\(r = 1\\)) proceeds power function (\\(r > 1\\)). Power function decay allows rapid inital decay followed sustained period slow decay (Teunis et al. 2016). Available model variants described Table 1.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"how-to-use-seroincidence-package","dir":"Articles","previous_headings":"","what":"3. How to use seroincidence package","title":"Serocalculator package tutorial","text":"section provides step--step directions usage seroincidence package.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"loading-the-package","dir":"Articles","previous_headings":"3. How to use seroincidence package","what":"3.1. Loading the package","title":"Serocalculator package tutorial","text":"Functionality seroincidence package made available end user library loaded current workspace. Assuming package installed already (covered installation.pdf) loading achieved running following command R console (bear mind text character # comment): moment functions required run seroincidence calculation made available. can checked running: resulting output: briefly describe important objects functions: [DISEASE]Params[MODEL_TYPE]: Monte Carlo sample longitudinal response parameters per antibody various diseases: Campylobacter, Pertussis, Salmonella. Object class: list. [DISEASE]Sim[Low|Medium|High]Data: Example simulated antibody levels data measured cross-sectional population three values lambda (incidence): 0.036 (“Low”), 0.21 (“Medium”) 1.15 (“High”) (1/yr). Object class: data.frame. getAdditionalData: Utility function downloading additional longitudinal response parameters online repository. Files available download coxiellaIFAParams4.zip yersiniaSSIParams4.zip. Object class: function. estimateSeroincidence: Main function package. Estimates seroincidence based supplied cross-section antibody levels data longitudinal response parameters. Object class: function.","code":"# Load package \"seroincidence\" library(serocalculator) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union # List all objects (functions and data) exposed by package \"seroincidence\". ls(\"package:serocalculator\") ##  [1] \"campylobacterDelftParams1\"  \"campylobacterDelftParams3\"  ##  [3] \"campylobacterDelftParams4\"  \"campylobacterSimHighData\"   ##  [5] \"campylobacterSimLowData\"    \"campylobacterSimMediumData\" ##  [7] \"campylobacterSSIParams1\"    \"campylobacterSSIParams2\"    ##  [9] \"campylobacterSSIParams4\"    \"estimateSeroincidence\"      ## [11] \"fdev\"                       \"getAdditionalData\"          ## [13] \"pertussisIgGPTParams1\"      \"pertussisIgGPTParams2\"      ## [15] \"pertussisIgGPTParams3\"      \"pertussisIgGPTParams4\"      ## [17] \"pertussisSimHighData\"       \"pertussisSimLowData\"        ## [19] \"pertussisSimMediumData\"     \"salmonellaSSIParams1\"       ## [21] \"salmonellaSSIParams2\"       \"salmonellaSSIParams4\""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"specifying-input-data","dir":"Articles","previous_headings":"3. How to use seroincidence package","what":"3.2. Specifying input data","title":"Serocalculator package tutorial","text":"two sets inputs serology calculator must always specified: Simulated antibody levels measured cross-sectional population sample (see campylobacterSimLowData, campylobacterSimMediumData, etc. ). Longitudinal response characteristic set parameters (y1, alpha, yb, r, y0, mu1, t1) (see campylobacterDelftParams1, campylobacterSSIParams2, etc. ). start loading antibody levels measured cross-sectional population sample.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"specifying-cross-sectional-antibody-levels-data","dir":"Articles","previous_headings":"3. How to use seroincidence package > 3.2. Specifying input data","what":"3.2.1. Specifying cross-sectional antibody levels data","title":"Serocalculator package tutorial","text":"user options providing data calculator: ) Using supplied sample data Data set campylobacterSimMediumData provides example cross-sectional antibody levels data Campylobacter. loaded workspace soon package loaded, therefore can referenced right away. small exempt data set: Let us create serology data serologyData based data set: can view data also tabular form: shall pass object later calculator. Object serologyData must contain least one column named IgG, IgM, IgA. Additionally, column Age used calculations present. Otherwise, created --fly initialized NA (available). Column Age, supplied, assumed represent age days. Please, note cross-sectional data set can include extra columns allowing performing seroincidence calculations stratified per factors available data. example column AgeCat can used stratum variable. particular variable created mapping age days (column Age) 15 categories, category 1 grouping youngest subjects category 15 grouping oldest subjects. ii) Loading external files user can load /data R session. Details loading specific file types can found online R manual R Data Import/Export. important input data tabular form column containing levels measured single antibody type. Column name indicate name measured antibody. instance, comma separated file following content: valid cross-sectional data set. Suppose file named c:\\cross-sectional-data.csv. can loaded R like :","code":"# Show three first rows of \"campylobacterSimMediumData\" data.frame. head(campylobacterSimMediumData, 3) ##         Age       IgG        IgM          IgA ## 1  4530.743 0.2242790 0.05442598 1.138591e-02 ## 2  5173.256 0.8498734 0.10667042 2.093677e-06 ## 3 24187.164 0.1849355 1.24958865 1.652755e-01 # Assign data.frame \"campylobacterDelftData\" to object named \"serologyData\". serologyData <- campylobacterSimMediumData |>    mutate(AgeCat = cut(Age, 15, labels = FALSE))  # Print a few first observations. head(serologyData) ##         Age       IgG          IgM          IgA AgeCat ## 1  4530.743 0.2242790 0.0544259797 1.138591e-02      3 ## 2  5173.256 0.8498734 0.1066704172 2.093677e-06      3 ## 3 24187.164 0.1849355 1.2495886495 1.652755e-01     14 ## 4 21427.836 1.1743485 0.0001590331 3.122555e-02     12 ## 5 12560.687 1.0656224 0.0013906805 8.723256e-04      7 ## 6 17083.219 0.1115373 0.4976598547 2.321977e-01     10 View(serologyData) IgG, IgM, IgA 5.337300, 0.4414653, 0.3002395 3.534118, 0.3888226, 0.3543486 2.144549, 0.3320178, 0.3884205 2.957854, 0.4967764, 0.3472340 # Read content of file \"C:\\cross-sectional-data.csv\" into object named  # \"serologyData\". serologyData <- read.csv(file = \"C:\\\\cross-sectional-data.csv\")"},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"longParams","dir":"Articles","previous_headings":"3. How to use seroincidence package > 3.2. Specifying input data","what":"3.2.2. Specifying longitudinal response parameters","title":"Serocalculator package tutorial","text":"longitudinal response parameters set consists following items: y1: antibody peak level (ELISA units) alpha: antibody decay rate (1/days current longitudinal parameter sets) yb: baseline antibody level \\(t\\) approaching infinity (\\(y(t->inf)\\)) r: shape factor antibody decay y0: baseline antibody level \\(t=0\\) (\\(y(t=0)\\)) mu1: initial antibody growth rate t1: duration infection Please, refer vignette methodology.pdf details underlying methodology. End user three options loading response parameters R session: ) Using supplied data longitudinal response parameter data sets provided package including Monte-Carlo sample longitudinal response parameters, like campylobacterDelftParams4. particular object list containing three data.frame objects named IgG, IgM IgA. Let’s pick two data sets separately (notice character $ indicating sub-object parent object): Let us assign object campylobacterDelftParams4 variable responseParams: ii) Loading local external files Alternatively, data can loaded external file. Bear mind, likely data organized three files, separately antibody IgG, IgM IgA. Assuming data saved csv files named IgG.csv, IgM.csv IgA.csv end user run following code order create valid input calculator: Note object responseParams list three dataframes named IgG, IgM IgA required. iii) Loading external repository Finally, response parameters can obtained online repository set package. repository hosted ECDC servers. time publishing package two files available: coxiellaIFAParams4.zip: longitudinal response parameters per antibody Coxiella. yersiniaSSIParams4.zip: longitudinal response parameters per antibody Yersinia. Simply use supplied utility function getAdditionalData download data: Internet connection needed function work.","code":"# Show first rows of data.frame \"IgG\" in list \"campylobacterDelftParams4\". head(campylobacterDelftParams4$IgG) ##          y1        alpha yb        r         y0       mu1       t1 ## 1 27.861427 0.0051607511  0 1.019014 0.07791154 0.7296875 8.057456 ## 2  3.306758 0.0011913102  0 1.099056 0.05077868 0.8435221 4.950963 ## 3 18.791581 0.0006869688  0 1.010531 0.09212040 0.6116469 8.694670 ## 4  5.866064 0.0006929407  0 1.019739 0.07694126 0.5232645 8.282421 ## 5 14.364930 0.0035222413  0 1.092096 0.05110497 0.9445758 5.969519 ## 6  5.790477 0.0003697673  0 1.010602 0.09127834 0.7696968 5.391807 # Show first rows of data.frame \"IgM\" in list \"campylobacterDelftParams4\". head(campylobacterDelftParams4$IgM) ##          y1        alpha yb        r         y0       mu1       t1 ## 1 3.0218848 0.0068170529  0 1.073372 0.09900034 0.3980767 8.587573 ## 2 1.4605254 0.0004345318  0 1.042603 0.07462244 0.4741715 6.272224 ## 3 2.1067968 0.0043837064  0 1.068606 0.10507351 0.4748134 6.314615 ## 4 1.1187181 0.0019154929  0 1.071340 0.09971466 0.3124635 7.737306 ## 5 0.4222472 0.0005651563  0 1.000181 0.12935880 0.5040532 2.346977 ## 6 4.5818356 0.0158849155  0 1.071558 0.10262796 0.6777377 5.605037 # Show first rows of data.frame \"IgA\" in list \"campylobacterDelftParams4\". head(campylobacterDelftParams4$IgA) ##          y1        alpha yb        r         y0       mu1        t1 ## 1 2.7471594 0.0235920904  0 2.773443 0.06452524 0.2737697 13.702269 ## 2 0.3361973 0.0001511561  0 1.006182 0.13241137 0.6774068  1.375517 ## 3 1.3402570 0.0072306458  0 1.640734 0.12395023 0.3883815  6.129892 ## 4 7.8335091 0.0028906244  0 2.768401 0.06512216 0.3482461 13.754356 ## 5 0.3069594 0.0029306951  0 1.050954 0.07870162 0.4218624  3.226293 ## 6 1.6315826 0.0044291436  0 1.740029 0.12264517 0.5924527  4.368299 responseParams <- campylobacterDelftParams4 IgGData <- read.csv(file = \"IgG.csv\") IgMData <- read.csv(file = \"IgM.csv\") IgAData <- read.csv(file = \"IgA.csv\")  # Create a list named \"responseData\" containing objects named \"IgG\", \"IgM\" and  # \"IgA\". responseParams <- list(IgG = IgGData, IgM = IgMData, IgA = IgAData) responseParams <- getAdditionalData(\"coxiellaIFAParams4.zip\")"},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"estimating-seroincidence","dir":"Articles","previous_headings":"3. How to use seroincidence package","what":"3.3. Estimating seroincidence","title":"Serocalculator package tutorial","text":"Main calculation function provided package serocalculator called estimateSeroincidence. takes several arguments: data: data frame cross-sectional data (see variable serologyData ). may whole data set loaded file, can also subset, e.g. data = serologyData[1, ] use first row. tutorial data loaded variable serologyData. required input. antibodies: list antibodies used. can triplet (antibodies = c(\"IgG\", \"IgM\", \"IgA\")) single antibody (antibodies = c(\"IgG\")) combination two antibodies. required input. strata: list categories stratify data. column AgeCat example data set can used example. strata = \"\" (default), whole data set treated single stratum; sample assigned unique identifier (e.g. strata = \"AgeCat\") many strata samples incidence estimate calculated sample. specified, strata initialized \"\". params: list longitudinal parameters antibodies specified. tutorial data loaded variable responseParams. required input. censorLimits: list cutoff levels, one antibody used. antibody levels observations treated censored. required input. par0: List parameters (lognormal) distribution antibody concentrations true seronegatives (.e. never seroconverted), named antibody type (corresponding data). start starting value log(lambda). Value -6 corresponds roughly 1 day (log(1/365.25)), value -4 corresponds roughly 1 week (log(7/365.25)). Users adivised experiment value confirm convergence estimate obtained. Default -6. numCores Number processor cores use calculations computing strata. set 1 R package parallel available (installed default), computations stratum executed parallel. Default 1, ie. execution parallel. example Campylobacter seroincidence calculation three antibodies measured, stratified per AgeCat, measurements 0.1 removed: following text printed. important output subobject Fits containing raw results output incidence. Translation raw results provided custom function summary explained following section. cutoff argument based censoring observed serum antibody measurements (Strid et al. 2001). Cut-levels must always specified calling function estimateSeroincidence (argument censorLimits). Value 0 set antibody measurements censoring needed, instance Using different censoring levels produce different results. Choosing higher cut-causes estimates lambda decrease. Results published together chosen cut-values. cut-level 0.1 set example typical value, users set value reflecting censoring level data.","code":"# Prepare input data. serologyData <- campylobacterSimMediumData |>    mutate(     AgeCat = cut(Age, 15, labels = FALSE),     Age = NA)      responseParams <- campylobacterDelftParams4  cutOffs <- list(IgG = 0.1, IgM = 0.1, IgA = 0.1)  # Baseline distributions: the distributions of antibody concentrations in  # subjects who have never seroconverted. baseLine <- list(IgG = c(log(0.05), 1),                  IgM = c(log(0.005), 1),                  IgA = c(log(0.005), 1))  # Assign output of function \"estimateSeroincidence\" to object named  # \"seroincidenceData\". Use all available processor cores. seroincidenceData <- estimateSeroincidence(   data = serologyData,   antibodies = c(\"IgG\", \"IgM\", \"IgA\"),   strata = \"AgeCat\",   params = responseParams,   censorLimits = cutOffs,   par0 = baseLine,   numCores = parallel::detectCores(),   start = -4)  # Show content of the output variable... print(seroincidenceData) # ...or simply type in the console: 'seroincidenceData' (without \"'\") and  # press ENTER. ## Seroincidence object estimated given the following setup: ## a) Antibodies   : IgG, IgM, IgA ## b) Strata       : AgeCat  ## c) Censor limits:  IgG = 0.1, IgM = 0.1, IgA = 0.1  ##  ## This object is a list containing the following items: ## Fits         - List of outputs of \"optim\" function per stratum. ## Antibodies   - Input parameter antibodies of function \"estimateSeroincidence\". ## Strata       - Input parameter strata of function \"estimateSeroincidence\". ## CensorLimits - Input parameter censorLimits of function \"estimateSeroincidence\". ##  ## Call summary function to obtain output results. censorLimits <- list(IgG = 0, IgM = 0, IgA = 0)"},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"getting-a-summary-of-seroincidence","dir":"Articles","previous_headings":"3. How to use seroincidence package","what":"3.4. Getting a summary of seroincidence","title":"Serocalculator package tutorial","text":"Output calculator passed function summary calculating output results: summary function returns list objects well. contains sub-objects Antibodies, Strata, CensorLimits, Quantiles Results. important sub-object output summary functions Results, containing estimates Lambda (annual incidence) together lower upper bounds (Lambda.lwr Lambda.upr, respectively). default lower bound 2.5% upper bound 97.5% distribution Lambda. values can changed (see examples). Optionally, summary function returns also Deviance (negative log likelihood estimated Lambda) Convergence (indicator returned function stats::optim; value 0 indicates convergence). may beneficial assign output function variable analysis: one may note dataframe six columns can later post-processed custom calculations.","code":"summary(seroincidenceData) ## Seroincidence estimated given the following setup: ## a) Antibodies   : IgG, IgM, IgA  ## b) Strata       : AgeCat  ## c) Censor limits: IgG = 0.1, IgM = 0.1, IgA = 0.1  ## d) Quantiles    : 0.025, 0.975  ##  ##  Seroincidence estimates: ##    Lambda.est Lambda.lwr Lambda.upr  Deviance Convergence Stratum ## 1  0.09721890 0.06397004 0.14774909 105.29815           0       1 ## 2  0.05497303 0.03573489 0.08456817 181.90627           0       2 ## 3  0.04456096 0.02845903 0.06977327 199.99357           0       3 ## 4  0.02944038 0.01715302 0.05052964 141.32558           0       4 ## 5  0.02569781 0.01436524 0.04597053 123.33213           0       5 ## 6  0.02565297 0.01587275 0.04145941 187.41060           0       6 ## 7  0.03458616 0.02012722 0.05943207 128.84486           0       7 ## 8  0.02776873 0.02640621 0.02920154 133.57166          52       8 ## 9  0.04016261 0.02133209 0.07561541  94.99389           0       9 ## 10 0.01996477 0.01898409 0.02099612 104.30992          52      10 ## 11 0.03356017 0.01917771 0.05872886 141.20168           0      11 ## 12 0.05287648 0.03263923 0.08566140 181.68655           0      12 ## 13 0.05081097 0.02946963 0.08760729 123.66670          52      13 ## 14 0.04813104 0.02945312 0.07865371 186.92218           0      14 ## 15 0.03421042 0.02210895 0.05293569 215.78684           0      15 # Compute seroincidence summary and assign to object \"seroincidenceSummary\". seroincidenceSummary <- summary(seroincidenceData)  # Show the results. seroincidenceSummary$Results ##    Lambda.est Lambda.lwr Lambda.upr  Deviance Convergence Stratum ## 1  0.09721890 0.06397004 0.14774909 105.29815           0       1 ## 2  0.05497303 0.03573489 0.08456817 181.90627           0       2 ## 3  0.04456096 0.02845903 0.06977327 199.99357           0       3 ## 4  0.02944038 0.01715302 0.05052964 141.32558           0       4 ## 5  0.02569781 0.01436524 0.04597053 123.33213           0       5 ## 6  0.02565297 0.01587275 0.04145941 187.41060           0       6 ## 7  0.03458616 0.02012722 0.05943207 128.84486           0       7 ## 8  0.02776873 0.02640621 0.02920154 133.57166          52       8 ## 9  0.04016261 0.02133209 0.07561541  94.99389           0       9 ## 10 0.01996477 0.01898409 0.02099612 104.30992          52      10 ## 11 0.03356017 0.01917771 0.05872886 141.20168           0      11 ## 12 0.05287648 0.03263923 0.08566140 181.68655           0      12 ## 13 0.05081097 0.02946963 0.08760729 123.66670          52      13 ## 14 0.04813104 0.02945312 0.07865371 186.92218           0      14 ## 15 0.03421042 0.02210895 0.05293569 215.78684           0      15"},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"other-examples","dir":"Articles","previous_headings":"","what":"4. Other examples","title":"Serocalculator package tutorial","text":"following examples show standard procedure estimating seroincidence.","code":"# 1. Define cross-sectional data. serologyData <- with(campylobacterSimMediumData,                      data.frame(                        IgG = IgG.ratio.new,                        IgM = IgM.ratio.new,                        IgA = IgA.ratio.new))  # 2. Define longitudinal response data responseParams <- campylobacterDelftParams3  # 3. Define cut-offs cutOffs <- list(IgG = 0.25, IgM = 0.25, IgA = 0.25)  # 4. Baseline distributions baseLine <- list(IgG = c(log(0.05), 1),                  IgM = c(log(0.005), 1),                  IgA = c(log(0.005), 1))  # 4a. Calculate a single seroincidence rate for all serum samples... seroincidenceData <- estimateSeroincidence(   data = serologyData,   antibodies = c(\"IgG\", \"IgM\", \"IgA\"),   strata = \"\",   params = responseParams,   censorLimits = cutOffs,   par0 = baseLine)  # 4b. ...or calculate a single seroincidence rate for a single serum sample  # (triplet of titres)... seroincidenceData <- estimateSeroincidence(   data = serologyData[1, ],   antibodies = c(\"IgG\", \"IgM\", \"IgA\"),   strata = \"\",   params = responseParams,   censorLimits = cutOffs,   par0 = baseLine)  # 4c. ...or calculate a single seroincidence rate for all serum samples (only IgG) seroincidenceData <- estimateSeroincidence(   data = serologyData,   antibodies = c(\"IgG\"),   strata = \"\",   params = responseParams,   censorLimits = cutOffs,   par0 = baseLine)  # 5a. Produce summary of the results with 2.5% and 97.5% bounds... summary(seroincidenceData)  # 5b. ...or produce summary of the results with 5% and 95% bounds, do not show  # convergence... summary(seroincidenceData, quantiles = c(0.05, 0.95), showConvergence = FALSE)  # 5c. ...or produce summary and assign to an object... seroincidenceSummary <- summary(seroincidenceData) # ...and work with the results object from now on (here: display the results). seroincidenceSummary$Results"},{"path":"https://ucd-seg.github.io/serocalculator/articles/tutorial.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Serocalculator package tutorial","text":"de Graaf, W. F., M. E. E. Kretzschmar, P. F. M. Teunis, O. Diekmann. 2014. “Two-Phase Within-Host Model Immune Response Application Serological Profiles Pertussis.” Epidemics 9 (December): 1–7. https://doi.org/10.1016/j.epidem.2014.08.002. Simonsen, J., K. Mølbak, G. Falkenhorst, K. . Krogfelt, . Linneberg, P. F. Teunis. 2009. “Estimation Incidences Infectious Diseases Based Antibody Measurements.” Statistics Medicine 28 (14): 1882–95. https://doi.org/10.1002/sim.3592. Strid, M. ., J. Engberg, L. B. Larsen, K Begtrup, K Mølbak, K. . Krogfelt. 2001. “Antibody Responses Campylobacter Infections Determined Enzyme–Linked Immunosorbent Assay: 2-Year Follow-Study 210 Patients.” Clinical Vaccine Immunology. https://doi.org/10.1128/CDLI.8.2.314-319.2001. Teunis, P. F., J. C. van Eijkeren, C. W. Ang, Y. T. van Duynhoven, J. B. Simonsen, M. . Strid, W. van Pelt. 2012. “Biomarker Dynamics: Estimating Infection Rates Serological Data.” Statistics Medicine 31 (208). https://doi.org/10.1002/sim.5322. Teunis, P. F., J. C. van Eijkeren, W. F. de Graaf, . Bonačić Marinović, M. E. E. Kretzschmar. 2016. “Linking Seroresponse Infection Within-Host Heterogeneity Antibody Production.” Epidemics 16 (September). https://doi.org/10.1016/j.epidem.2016.04.001.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.            Author method original code. Jan van Eijkeren. Contributor.            Author method original code. Daniel Lewandowski. Contributor.            Creator `seroincidence` R package. Chantal Quinten. Contributor. Kristen Aiemjoy. Author, contributor. Douglas Ezra Morrison. Author, contributor, maintainer.            Package maintainer.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Aiemjoy K, Morrison D (2022). serocalculator: Estimating Infection Rates Serological Data. https://github.com/UCD-SEG/serocalculator, https://ucd-seg.github.io/serocalculator/.","code":"@Manual{,   title = {serocalculator: Estimating Infection Rates from Serological Data},   author = {Peter Teunis and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2022},   note = {https://github.com/UCD-SEG/serocalculator, https://ucd-seg.github.io/serocalculator/}, }"},{"path":"https://ucd-seg.github.io/serocalculator/index.html","id":"serocalculator-package","dir":"","previous_headings":"","what":"Estimating Infection Rates from Serological Data","title":"Estimating Infection Rates from Serological Data","text":"Antibody levels measured (cross–sectional) population sample can translated estimate frequency seroconversions (infections) occur sampled population. Formulated simply: presence many high titres indicates many subjects likely experienced infection recently, low titres indicate low frequency infections sampled population. serocalculator script designed use longitudinal response characteristics means set parameters characterizing longitudinal response selected serum antibodies.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimating Infection Rates from Serological Data","text":"can install development version GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"ucd-seg/serocalculator\")"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams1.html","id":null,"dir":"Reference","previous_headings":"","what":"Campylobacter Delft Response Parameters Data for Model 1 — campylobacterDelftParams1","title":"Campylobacter Delft Response Parameters Data for Model 1 — campylobacterDelftParams1","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Campylobacter Delft Response Parameters Data for Model 1 — campylobacterDelftParams1","text":"","code":"campylobacterDelftParams1"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Campylobacter Delft Response Parameters Data for Model 1 — campylobacterDelftParams1","text":"list three dataframes: IgA dataframe containing 4000 rows 7 parameters IgA antibody. IgM dataframe containing 4000 rows 7 parameters IgM antibody. IgG dataframe containing 4000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Campylobacter Delft Response Parameters Data for Model 1 — campylobacterDelftParams1","text":"","code":"# Show first rows of every dataframe contained in campylobacterDelftParams1 lapply(campylobacterDelftParams1, head) #> $IgA #>          y1       alpha yb r y0 mu1 t1 #> 1 0.9790816 0.005617736  0 1 NA  NA  0 #> 2 0.8561027 0.005686470  0 1 NA  NA  0 #> 3 0.8115014 0.005653234  0 1 NA  NA  0 #> 4 1.6246947 0.007071109  0 1 NA  NA  0 #> 5 1.6912089 0.007544257  0 1 NA  NA  0 #> 6 7.4984300 0.011753968  0 1 NA  NA  0 #>  #> $IgM #>          y1       alpha yb r y0 mu1 t1 #> 1 1.4153120 0.004264498  0 1 NA  NA  0 #> 2 0.6276850 0.002730359  0 1 NA  NA  0 #> 3 3.4163114 0.008804830  0 1 NA  NA  0 #> 4 1.8461903 0.005448317  0 1 NA  NA  0 #> 5 0.7790359 0.002590766  0 1 NA  NA  0 #> 6 0.3165559 0.001623372  0 1 NA  NA  0 #>  #> $IgG #>          y1       alpha yb r y0 mu1 t1 #> 1 12.012193 0.003507050  0 1 NA  NA  0 #> 2 11.361843 0.001877301  0 1 NA  NA  0 #> 3  6.644749 0.001918942  0 1 NA  NA  0 #> 4 12.757673 0.001004286  0 1 NA  NA  0 #> 5 10.514934 0.001570312  0 1 NA  NA  0 #> 6  8.421454 0.003307627  0 1 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams3.html","id":null,"dir":"Reference","previous_headings":"","what":"Campylobacter Delft Response Parameters Data for Model 3 — campylobacterDelftParams3","title":"Campylobacter Delft Response Parameters Data for Model 3 — campylobacterDelftParams3","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Campylobacter Delft Response Parameters Data for Model 3 — campylobacterDelftParams3","text":"","code":"campylobacterDelftParams3"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Campylobacter Delft Response Parameters Data for Model 3 — campylobacterDelftParams3","text":"list three dataframes: IgA dataframe containing 4000 rows 7 parameters IgA antibody. IgM dataframe containing 4000 rows 7 parameters IgM antibody. IgG dataframe containing 4000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Campylobacter Delft Response Parameters Data for Model 3 — campylobacterDelftParams3","text":"","code":"# Show first rows of every dataframe contained in campylobacterDelftParams3 lapply(campylobacterDelftParams3, head) #> $IgA #>          y1       alpha yb r        y0        mu1        t1 #> 1 0.9790816 0.005617736  0 1 0.5968037 0.16152280 3.0647487 #> 2 0.8561027 0.005686470  0 1 0.6490095 0.14953802 1.8519904 #> 3 0.8115014 0.005653234  0 1 0.3162894 0.20908627 4.5064094 #> 4 1.6246947 0.007071109  0 1 0.7882382 0.29381913 2.4616328 #> 5 1.6912089 0.007544257  0 1 0.5962426 0.25043491 4.1629632 #> 6 7.4984300 0.011753968  0 1 7.3277274 0.06639833 0.3468196 #>  #> $IgM #>          y1       alpha yb r        y0       mu1        t1 #> 1 1.4153120 0.004264498  0 1 0.6213528 0.2079336  3.958986 #> 2 0.6276850 0.002730359  0 1 0.3697257 0.1366566  3.873045 #> 3 3.4163114 0.008804830  0 1 0.2768008 0.2385225 10.535773 #> 4 1.8461903 0.005448317  0 1 0.9193840 0.3195337  2.181853 #> 5 0.7790359 0.002590766  0 1 0.5470029 0.0860775  4.107961 #> 6 0.3165559 0.001623372  0 1 0.2296537 0.0809985  3.962139 #>  #> $IgG #>          y1       alpha yb r       y0       mu1       t1 #> 1 12.012193 0.003507050  0 1 1.140502 0.3664422 6.425171 #> 2 11.361843 0.001877301  0 1 1.578391 0.3105795 6.355391 #> 3  6.644749 0.001918942  0 1 1.138631 0.3945647 4.470751 #> 4 12.757673 0.001004286  0 1 2.809073 0.2565113 5.899462 #> 5 10.514934 0.001570312  0 1 1.277037 0.6905252 3.053117 #> 6  8.421454 0.003307627  0 1 1.181497 0.3235032 6.071037 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams4.html","id":null,"dir":"Reference","previous_headings":"","what":"Campylobacter Delft Response Parameters Data for Model 4 — campylobacterDelftParams4","title":"Campylobacter Delft Response Parameters Data for Model 4 — campylobacterDelftParams4","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Campylobacter Delft Response Parameters Data for Model 4 — campylobacterDelftParams4","text":"","code":"campylobacterDelftParams4"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Campylobacter Delft Response Parameters Data for Model 4 — campylobacterDelftParams4","text":"list three dataframes: IgA dataframe containing 3000 rows 7 parameters IgA antibody. IgM dataframe containing 3000 rows 7 parameters IgM antibody. IgG dataframe containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterDelftParams4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Campylobacter Delft Response Parameters Data for Model 4 — campylobacterDelftParams4","text":"","code":"# Show first rows of every dataframe contained in campylobacterDelftParams4 lapply(campylobacterDelftParams4, head) #> $IgA #>          y1        alpha yb        r         y0       mu1        t1 #> 1 2.7471594 0.0235920904  0 2.773443 0.06452524 0.2737697 13.702269 #> 2 0.3361973 0.0001511561  0 1.006182 0.13241137 0.6774068  1.375517 #> 3 1.3402570 0.0072306458  0 1.640734 0.12395023 0.3883815  6.129892 #> 4 7.8335091 0.0028906244  0 2.768401 0.06512216 0.3482461 13.754356 #> 5 0.3069594 0.0029306951  0 1.050954 0.07870162 0.4218624  3.226293 #> 6 1.6315826 0.0044291436  0 1.740029 0.12264517 0.5924527  4.368299 #>  #> $IgM #>          y1        alpha yb        r         y0       mu1       t1 #> 1 3.0218848 0.0068170529  0 1.073372 0.09900034 0.3980767 8.587573 #> 2 1.4605254 0.0004345318  0 1.042603 0.07462244 0.4741715 6.272224 #> 3 2.1067968 0.0043837064  0 1.068606 0.10507351 0.4748134 6.314615 #> 4 1.1187181 0.0019154929  0 1.071340 0.09971466 0.3124635 7.737306 #> 5 0.4222472 0.0005651563  0 1.000181 0.12935880 0.5040532 2.346977 #> 6 4.5818356 0.0158849155  0 1.071558 0.10262796 0.6777377 5.605037 #>  #> $IgG #>          y1        alpha yb        r         y0       mu1       t1 #> 1 27.861427 0.0051607511  0 1.019014 0.07791154 0.7296875 8.057456 #> 2  3.306758 0.0011913102  0 1.099056 0.05077868 0.8435221 4.950963 #> 3 18.791581 0.0006869688  0 1.010531 0.09212040 0.6116469 8.694670 #> 4  5.866064 0.0006929407  0 1.019739 0.07694126 0.5232645 8.282421 #> 5 14.364930 0.0035222413  0 1.092096 0.05110497 0.9445758 5.969519 #> 6  5.790477 0.0003697673  0 1.010602 0.09127834 0.7696968 5.391807 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams1.html","id":null,"dir":"Reference","previous_headings":"","what":"Campylobacter SSI Response Parameters Data for Model 1 — campylobacterSSIParams1","title":"Campylobacter SSI Response Parameters Data for Model 1 — campylobacterSSIParams1","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Campylobacter SSI Response Parameters Data for Model 1 — campylobacterSSIParams1","text":"","code":"campylobacterSSIParams1"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Campylobacter SSI Response Parameters Data for Model 1 — campylobacterSSIParams1","text":"list three dataframes: IgA dataframe containing 4000 rows 7 parameters IgA antibody. IgM dataframe containing 4000 rows 7 parameters IgM antibody. IgG dataframe containing 4000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Campylobacter SSI Response Parameters Data for Model 1 — campylobacterSSIParams1","text":"","code":"# Show first rows of every dataframe contained in campylobacterSSIParams1 lapply(campylobacterSSIParams1, head) #> $IgA #>          y1       alpha yb r y0 mu1 t1 #> 1 0.7003339 0.022609111  0 1 NA  NA  0 #> 2 0.4881885 0.021309170  0 1 NA  NA  0 #> 3 0.7607791 0.016486080  0 1 NA  NA  0 #> 4 1.5342800 0.014820666  0 1 NA  NA  0 #> 5 0.2454033 0.005397104  0 1 NA  NA  0 #> 6 0.9043005 0.017098452  0 1 NA  NA  0 #>  #> $IgM #>          y1        alpha yb r y0 mu1 t1 #> 1 0.8079065 0.0012365599  0 1 NA  NA  0 #> 2 0.4662612 0.0010868782  0 1 NA  NA  0 #> 3 0.9829273 0.0013366391  0 1 NA  NA  0 #> 4 0.1463502 0.0009022539  0 1 NA  NA  0 #> 5 0.1940006 0.0005063741  0 1 NA  NA  0 #> 6 0.7127425 0.0013184843  0 1 NA  NA  0 #>  #> $IgG #>          y1       alpha yb r y0 mu1 t1 #> 1 1.5841532 0.001312580  0 1 NA  NA  0 #> 2 1.8657514 0.001438733  0 1 NA  NA  0 #> 3 1.3126431 0.001351047  0 1 NA  NA  0 #> 4 1.1131536 0.001048270  0 1 NA  NA  0 #> 5 1.4794378 0.001274966  0 1 NA  NA  0 #> 6 0.9348555 0.001437053  0 1 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams2.html","id":null,"dir":"Reference","previous_headings":"","what":"Campylobacter SSI Response Parameters Data for Model 2 — campylobacterSSIParams2","title":"Campylobacter SSI Response Parameters Data for Model 2 — campylobacterSSIParams2","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Campylobacter SSI Response Parameters Data for Model 2 — campylobacterSSIParams2","text":"","code":"campylobacterSSIParams2"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Campylobacter SSI Response Parameters Data for Model 2 — campylobacterSSIParams2","text":"list three dataframes: IgA dataframe containing 3000 rows 7 parameters IgA antibody. IgM dataframe containing 3000 rows 7 parameters IgM antibody. IgG dataframe containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Campylobacter SSI Response Parameters Data for Model 2 — campylobacterSSIParams2","text":"","code":"# Show first rows of every dataframe contained in campylobacterSSIParams2 lapply(campylobacterSSIParams2, head) #> $IgA #>          y1       alpha yb        r y0 mu1 t1 #> 1 0.3790329 0.013723334  0 1.180966 NA  NA  0 #> 2 1.2994481 0.005642420  0 1.212107 NA  NA  0 #> 3 9.4465428 0.011623566  0 1.205368 NA  NA  0 #> 4 1.0094504 0.027030054  0 1.114516 NA  NA  0 #> 5 0.7431767 0.004296025  0 1.210028 NA  NA  0 #> 6 0.5895802 0.005579473  0 1.219622 NA  NA  0 #>  #> $IgM #>          y1       alpha yb        r y0 mu1 t1 #> 1 2.0649209 0.011219203  0 1.163448 NA  NA  0 #> 2 0.5802861 0.001512339  0 1.140606 NA  NA  0 #> 3 1.0067090 0.016613231  0 1.197256 NA  NA  0 #> 4 0.6119739 0.013465649  0 1.144594 NA  NA  0 #> 5 0.6514105 0.002957626  0 1.142666 NA  NA  0 #> 6 0.3944259 0.021869072  0 1.136722 NA  NA  0 #>  #> $IgG #>          y1        alpha yb        r y0 mu1 t1 #> 1 1.3482386 0.0025760745  0 1.160319 NA  NA  0 #> 2 0.7507566 0.0009904948  0 1.163093 NA  NA  0 #> 3 1.5366781 0.0027693686  0 1.169187 NA  NA  0 #> 4 1.3857968 0.0060489554  0 1.142833 NA  NA  0 #> 5 1.1860646 0.0023857957  0 1.155256 NA  NA  0 #> 6 1.6407579 0.0053201985  0 1.148251 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams4.html","id":null,"dir":"Reference","previous_headings":"","what":"Campylobacter SSI Response Parameters Data for Model 4 — campylobacterSSIParams4","title":"Campylobacter SSI Response Parameters Data for Model 4 — campylobacterSSIParams4","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Campylobacter SSI Response Parameters Data for Model 4 — campylobacterSSIParams4","text":"","code":"campylobacterSSIParams4"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Campylobacter SSI Response Parameters Data for Model 4 — campylobacterSSIParams4","text":"list three dataframes: IgA dataframe containing 3000 rows 7 parameters IgA antibody. IgM dataframe containing 3000 rows 7 parameters IgM antibody. IgG dataframe containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSSIParams4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Campylobacter SSI Response Parameters Data for Model 4 — campylobacterSSIParams4","text":"","code":"# Show first rows of every dataframe contained in campylobacterSSIParams4 lapply(campylobacterSSIParams4, head) #> $IgA #>          y1       alpha yb        r        y0        mu1       t1 #> 1 0.3790329 0.013723334  0 1.180966 0.3084470 0.04388666 4.695573 #> 2 1.2994481 0.005642420  0 1.212107 0.8601382 0.12999444 3.173996 #> 3 9.4465428 0.011623566  0 1.205368 1.0658161 0.23740385 9.190702 #> 4 1.0094504 0.027030054  0 1.114516 0.9711994 0.03547790 1.088834 #> 5 0.7431767 0.004296025  0 1.210028 0.6803783 0.04747750 1.859510 #> 6 0.5895802 0.005579473  0 1.219622 0.4211322 0.13267245 2.536050 #>  #> $IgM #>          y1       alpha yb        r        y0        mu1        t1 #> 1 2.0649209 0.011219203  0 1.163448 1.3425809 0.09497971 4.5325273 #> 2 0.5802861 0.001512339  0 1.140606 0.4028595 0.10778318 3.3858110 #> 3 1.0067090 0.016613231  0 1.197256 0.8758258 0.15130671 0.9204797 #> 4 0.6119739 0.013465649  0 1.144594 0.4820747 0.07959144 2.9976911 #> 5 0.6514105 0.002957626  0 1.142666 0.6132294 0.02129935 2.8358109 #> 6 0.3944259 0.021869072  0 1.136722 0.3087485 0.04117147 5.9483978 #>  #> $IgG #>          y1        alpha yb        r        y0        mu1       t1 #> 1 1.3482386 0.0025760745  0 1.160319 0.7311131 0.09686797 6.317734 #> 2 0.7507566 0.0009904948  0 1.163093 0.5792900 0.05599269 4.630574 #> 3 1.5366781 0.0027693686  0 1.169187 0.4715269 0.30069910 3.928852 #> 4 1.3857968 0.0060489554  0 1.142833 0.8390058 0.20711698 2.422848 #> 5 1.1860646 0.0023857957  0 1.155256 0.9270293 0.06708116 3.673325 #> 6 1.6407579 0.0053201985  0 1.148251 1.2162005 0.12496860 2.396015 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSimLowData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Cross-sectional Data — campylobacterSimLowData","title":"Simulated Cross-sectional Data — campylobacterSimLowData","text":"Simulated cross-sectional population sample antibody levels data Campylobacter Pertussis lambda 0.036/yr (low), 0.021/yr (medium) 1.15/yr (high).","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSimLowData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Cross-sectional Data — campylobacterSimLowData","text":"","code":"campylobacterSimLowData"},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSimLowData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Cross-sectional Data — campylobacterSimLowData","text":"data frame 500 observations following 2 4 variables: Age  IgG  IgM  IgA","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/campylobacterSimLowData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Cross-sectional Data — campylobacterSimLowData","text":"","code":"# Show first rows of the data head(campylobacterSimLowData) #>        Age          IgG          IgM          IgA #> 1 11871.16 5.532551e-02 2.131281e-03 7.027718e-02 #> 2  7869.00 9.195770e-02 1.303805e-01 1.502870e-01 #> 3   680.00 9.589740e-02 1.992161e-01 1.267946e-01 #> 4 23734.28 2.032342e-01 2.371293e-07 2.956911e-07 #> 5 16968.07 4.604123e-13 1.929238e-05 1.691724e-03 #> 6   769.00 1.311047e-01 1.070782e-01 1.442210e-01  # Summarize the data summary(campylobacterSimLowData) #>       Age             IgG               IgM                 IgA            #>  Min.   :   42   Min.   :0.00000   Min.   :0.0000000   Min.   :0.0000000   #>  1st Qu.: 6926   1st Qu.:0.02379   1st Qu.:0.0007472   1st Qu.:0.0005475   #>  Median :12577   Median :0.12649   Median :0.0445646   Median :0.0195426   #>  Mean   :13178   Mean   :0.22354   Mean   :0.0970820   Mean   :0.0672308   #>  3rd Qu.:19734   3rd Qu.:0.19127   3rd Qu.:0.1334760   3rd Qu.:0.1295172   #>  Max.   :27342   Max.   :2.59219   Max.   :2.1736800   Max.   :0.8397106"},{"path":"https://ucd-seg.github.io/serocalculator/reference/dot-nll.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate log-likelihood — .nll","title":"Calculate log-likelihood — .nll","text":"Calculate log-likelihood","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/dot-nll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate log-likelihood — .nll","text":"","code":".nll(   stratumData,   antibodies,   params,   censorLimits,   ivc = FALSE,   m = 0,   par0,   start )"},{"path":"https://ucd-seg.github.io/serocalculator/reference/dot-nll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate log-likelihood — .nll","text":"ivc `ivc = TRUE`, biomarker data interval-censored. start","code":""},{"path":[]},{"path":"https://ucd-seg.github.io/serocalculator/reference/estimateSeroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Seroincidence — estimateSeroincidence","title":"Estimate Seroincidence — estimateSeroincidence","text":"Function estimate seroincidences based cross-section serology data longitudinal response model.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/estimateSeroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Seroincidence — estimateSeroincidence","text":"","code":"estimateSeroincidence(   data,   antibodies,   strata = \"\",   params,   censorLimits,   par0,   start = -6,   numCores = 1L )"},{"path":"https://ucd-seg.github.io/serocalculator/reference/estimateSeroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Seroincidence — estimateSeroincidence","text":"data Data frame cross-sectional serology data per antibody age, additional columns identify possible strata. antibodies Character vector one antibody names. Values must match data. strata Character vector strata. Values must match data. Default = \"\". params List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type. censorLimits List cutoffs one named antibody types (corresponding data). par0 List parameters (lognormal) distribution antibody concentrations true seronegatives (.e. never seroconverted), named antibody type (corresponding data). start starting value log(lambda). Value -6 corresponds roughly 1 day (log(1/365.25)), -4 corresponds roughly 1 week (log(7 / 365.25)). Default = -6. numCores Number processor cores use calculations computing strata. set 1 package parallel available, computations executed parallel. Default = 1L.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/estimateSeroincidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Seroincidence — estimateSeroincidence","text":"set lambda estimates strata.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/estimateSeroincidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Seroincidence — estimateSeroincidence","text":"","code":"if (FALSE) { estimateSeroincidence(data = csData,                       antibodies = c(\"IgG\", \"IgM\", \"IgA\"),                       strata = \"\",                       params = campylobacterDelftParams4,                       censorLimits = cutOffs,                       par0 = baseLn,                       start = -4)  estimateSeroincidence(data = csData,                       antibodies = c(\"IgG\", \"IgM\", \"IgA\"),                       strata = \"\",                       params = campylobacterDelftParams4,                       censorLimits = cutOffs,                       par0 = baseLn,                       start = -4,                       numCores = parallel::detectCores()) }"},{"path":"https://ucd-seg.github.io/serocalculator/reference/fdev.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative log-likelihood (deviance) — fdev","title":"Calculate negative log-likelihood (deviance) — fdev","text":"[description added ]","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/fdev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative log-likelihood (deviance) — fdev","text":"","code":"fdev(log.lambda, csdata, lnpars, cond)"},{"path":"https://ucd-seg.github.io/serocalculator/reference/getAdditionalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Additional Data — getAdditionalData","title":"Get Additional Data — getAdditionalData","text":"Retrieves additional data internet. can file type, purpose function download data longitudinal response parameters online repository.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/getAdditionalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Additional Data — getAdditionalData","text":"","code":"getAdditionalData(   fileName,   repoURL = \"http://ecdc.europa.eu/sites/portal/files/documents\",   savePath = NULL )"},{"path":"https://ucd-seg.github.io/serocalculator/reference/getAdditionalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Additional Data — getAdditionalData","text":"fileName Name file download. Required. repoURL Web address remote repository files download . Required. Default = \"http://ecdc.europa.eu/sites/portal/files/documents\" savePath Folder save downloaded unzipped (needed) file. File saved argument NULL. Optional. Default = NULL.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/getAdditionalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Additional Data — getAdditionalData","text":"Data object","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/getAdditionalData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Additional Data — getAdditionalData","text":"","code":"if (FALSE) { getAdditionalData(fileName = \"coxiellaIFAParams4.zip\") getAdditionalData(fileName = \"yersiniaSSIParams4.zip\") getAdditionalData(fileName = \"coxiellaIFAParams4.zip\", savePath = getwd()) getAdditionalData(fileName = \"yersiniaSSIParams4.zip\", savePath = getwd()) }"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams1.html","id":null,"dir":"Reference","previous_headings":"","what":"Pertussis IgG-PT Response Parameters Data for Model 1 — pertussisIgGPTParams1","title":"Pertussis IgG-PT Response Parameters Data for Model 1 — pertussisIgGPTParams1","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pertussis IgG-PT Response Parameters Data for Model 1 — pertussisIgGPTParams1","text":"","code":"pertussisIgGPTParams1"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pertussis IgG-PT Response Parameters Data for Model 1 — pertussisIgGPTParams1","text":"dataframe IgG containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pertussis IgG-PT Response Parameters Data for Model 1 — pertussisIgGPTParams1","text":"","code":"# Show first rows of every dataframe contained in pertussisIgGPTParams1 lapply(pertussisIgGPTParams1, head) #> $IgG #>           y1        alpha yb r y0 mu1 t1 #> 1  309.95227 0.0013582931  0 1 NA  NA  0 #> 2  351.07244 0.0014761587  0 1 NA  NA  0 #> 3   61.72439 0.0003486033  0 1 NA  NA  0 #> 4 1103.35501 0.0023628598  0 1 NA  NA  0 #> 5 1402.26889 0.0040798615  0 1 NA  NA  0 #> 6  812.85619 0.0012771807  0 1 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams2.html","id":null,"dir":"Reference","previous_headings":"","what":"Pertussis IgG-PT Response Parameters Data for Model 2 — pertussisIgGPTParams2","title":"Pertussis IgG-PT Response Parameters Data for Model 2 — pertussisIgGPTParams2","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pertussis IgG-PT Response Parameters Data for Model 2 — pertussisIgGPTParams2","text":"","code":"pertussisIgGPTParams2"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pertussis IgG-PT Response Parameters Data for Model 2 — pertussisIgGPTParams2","text":"dataframe IgG containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pertussis IgG-PT Response Parameters Data for Model 2 — pertussisIgGPTParams2","text":"","code":"# Show first rows of every dataframe contained in pertussisIgGPTParams2 lapply(pertussisIgGPTParams2, head) #> $IgG #>            y1        alpha yb        r y0 mu1 t1 #> 1   9338.5182 3.908447e-06  0 1.984440 NA  NA  0 #> 2    608.0304 1.322816e-05  0 2.380790 NA  NA  0 #> 3    926.2819 2.797526e-06  0 2.291821 NA  NA  0 #> 4   5023.5881 2.141244e-05  0 1.897520 NA  NA  0 #> 5   6357.7694 7.986787e-06  0 1.869652 NA  NA  0 #> 6 656075.6374 1.876985e-06  0 2.326428 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams3.html","id":null,"dir":"Reference","previous_headings":"","what":"Pertussis IgG-PT Response Parameters Data for Model 3 — pertussisIgGPTParams3","title":"Pertussis IgG-PT Response Parameters Data for Model 3 — pertussisIgGPTParams3","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pertussis IgG-PT Response Parameters Data for Model 3 — pertussisIgGPTParams3","text":"","code":"pertussisIgGPTParams3"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pertussis IgG-PT Response Parameters Data for Model 3 — pertussisIgGPTParams3","text":"dataframe IgG containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pertussis IgG-PT Response Parameters Data for Model 3 — pertussisIgGPTParams3","text":"","code":"# Show first rows of every dataframe contained in pertussisIgGPTParams3 lapply(pertussisIgGPTParams3, head) #> $IgG #>           y1        alpha yb r        y0       mu1        t1 #> 1  309.95227 0.0013582931  0 1 0.8858853 0.6482737  9.035669 #> 2  351.07244 0.0014761587  0 1 0.4461476 0.1958226 34.051720 #> 3   61.72439 0.0003486033  0 1 0.7276450 0.2298031 19.323595 #> 4 1103.35501 0.0023628598  0 1 0.4962986 0.1398534 55.105486 #> 5 1402.26889 0.0040798615  0 1 0.5894248 0.6389777 12.167020 #> 6  812.85619 0.0012771807  0 1 1.0949915 1.0617529  6.225373 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams4.html","id":null,"dir":"Reference","previous_headings":"","what":"Pertussis IgG-PT Response Parameters Data for Model 4 — pertussisIgGPTParams4","title":"Pertussis IgG-PT Response Parameters Data for Model 4 — pertussisIgGPTParams4","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pertussis IgG-PT Response Parameters Data for Model 4 — pertussisIgGPTParams4","text":"","code":"pertussisIgGPTParams4"},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pertussis IgG-PT Response Parameters Data for Model 4 — pertussisIgGPTParams4","text":"dataframe IgG containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/pertussisIgGPTParams4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pertussis IgG-PT Response Parameters Data for Model 4 — pertussisIgGPTParams4","text":"","code":"# Show first rows of every dataframe contained in pertussisIgGPTParams4 lapply(pertussisIgGPTParams4, head) #> $IgG #>            y1        alpha yb        r        y0       mu1        t1 #> 1   9338.5182 3.908447e-06  0 1.984440 0.3679380 0.3642614 27.841941 #> 2    608.0304 1.322816e-05  0 2.380790 0.4518361 0.2308821 31.204939 #> 3    926.2819 2.797526e-06  0 2.291821 0.4148741 1.0713510  7.197416 #> 4   5023.5881 2.141244e-05  0 1.897520 0.3258315 0.2198684 43.859306 #> 5   6357.7694 7.986787e-06  0 1.869652 0.6074594 0.3787113 24.440524 #> 6 656075.6374 1.876985e-06  0 2.326428 0.2303021 0.4318404 34.416405 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.seroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Seroincidence Object — print.seroincidence","title":"Print Method for Seroincidence Object — print.seroincidence","text":"Custom print function show output seroincidence calculator estimateSeroincidence.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.seroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Seroincidence Object — print.seroincidence","text":"","code":"# S3 method for seroincidence print(x, ...)"},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.seroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Seroincidence Object — print.seroincidence","text":"x list containing output function estimateSeroincidence. ... Additional arguments affecting summary produced.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.seroincidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Seroincidence Object — print.seroincidence","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- estimateSeroincidence(...)  # print the seroincidence object to the console print(seroincidence)  # or simply type (appropriate print method will be invoked automatically) seroincidence }"},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.summary.seroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Seroincidence Summary Object — print.summary.seroincidence","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence","text":"Custom print function show output seroincidence summary summary.seroincidence.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.summary.seroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence","text":"","code":"# S3 method for summary.seroincidence print(x, ...)"},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.summary.seroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence","text":"x list containing output function summary.seroincidence. ... Additional arguments affecting summary produced.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/print.summary.seroincidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- estimateSeroincidence(...)  # calculate summary statistics for the seroincidence object seroincidenceSummary <- summary(seroincidence)  # print the summary of seroincidence object to the console print(seroincidenceSummary)  # or simply type (appropriate print method will be invoked automatically) seroincidenceSummary }"},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams1.html","id":null,"dir":"Reference","previous_headings":"","what":"Salmonella SSI Response Parameters Data for Model 1 — salmonellaSSIParams1","title":"Salmonella SSI Response Parameters Data for Model 1 — salmonellaSSIParams1","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salmonella SSI Response Parameters Data for Model 1 — salmonellaSSIParams1","text":"","code":"salmonellaSSIParams1"},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salmonella SSI Response Parameters Data for Model 1 — salmonellaSSIParams1","text":"list three dataframes: IgA dataframe containing 3000 rows 7 parameters IgA antibody. IgM dataframe containing 3000 rows 7 parameters IgM antibody. IgG dataframe containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Salmonella SSI Response Parameters Data for Model 1 — salmonellaSSIParams1","text":"","code":"# Show first rows of every dataframe contained in salmonellaSSIParams1 lapply(salmonellaSSIParams1, head) #> $IgA #>          y1       alpha yb r y0 mu1 t1 #> 1 0.8846559 0.008526753  0 1 NA  NA  0 #> 2 1.0830794 0.012876120  0 1 NA  NA  0 #> 3 0.8741444 0.008709623  0 1 NA  NA  0 #> 4 1.5351236 0.003502516  0 1 NA  NA  0 #> 5 0.3268195 0.002556930  0 1 NA  NA  0 #> 6 0.1963830 0.020255418  0 1 NA  NA  0 #>  #> $IgM #>            y1        alpha yb r y0 mu1 t1 #> 1 2.223399974 0.0707174863  0 1 NA  NA  0 #> 2 3.496295237 0.0028553885  0 1 NA  NA  0 #> 3 0.749391784 0.0008170739  0 1 NA  NA  0 #> 4 0.624004098 0.0027294130  0 1 NA  NA  0 #> 5 0.008570974 0.0020008248  0 1 NA  NA  0 #> 6 1.241508561 0.0009053516  0 1 NA  NA  0 #>  #> $IgG #>          y1        alpha yb r y0 mu1 t1 #> 1 0.6078662 4.586619e-02  0 1 NA  NA  0 #> 2 0.8793232 2.602733e-02  0 1 NA  NA  0 #> 3 0.2713987 7.542284e-04  0 1 NA  NA  0 #> 4 2.1483480 5.438996e+02  0 1 NA  NA  0 #> 5 0.1096123 3.154008e-03  0 1 NA  NA  0 #> 6 1.1052943 1.190809e-02  0 1 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams2.html","id":null,"dir":"Reference","previous_headings":"","what":"Salmonella SSI Response Parameters Data for Model 2 — salmonellaSSIParams2","title":"Salmonella SSI Response Parameters Data for Model 2 — salmonellaSSIParams2","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salmonella SSI Response Parameters Data for Model 2 — salmonellaSSIParams2","text":"","code":"salmonellaSSIParams2"},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salmonella SSI Response Parameters Data for Model 2 — salmonellaSSIParams2","text":"list three dataframes: IgA dataframe containing 3000 rows 7 parameters IgA antibody. IgM dataframe containing 3000 rows 7 parameters IgM antibody. IgG dataframe containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Salmonella SSI Response Parameters Data for Model 2 — salmonellaSSIParams2","text":"","code":"# Show first rows of every dataframe contained in salmonellaSSIParams2 lapply(salmonellaSSIParams2, head) #> $IgA #>          y1       alpha yb        r y0 mu1 t1 #> 1 0.1645894 0.008301086  0 1.020289 NA  NA  0 #> 2 0.4967038 0.007181714  0 1.021778 NA  NA  0 #> 3 2.5087166 0.001178859  0 1.017500 NA  NA  0 #> 4 1.8760033 0.018867951  0 1.020985 NA  NA  0 #> 5 0.2381400 0.003545378  0 1.018420 NA  NA  0 #> 6 0.1075755 0.001709320  0 1.017080 NA  NA  0 #>  #> $IgM #>          y1        alpha yb        r y0 mu1 t1 #> 1 0.6325777 0.0028957411  0 1.047555 NA  NA  0 #> 2 1.4144767 0.0328629331  0 1.039616 NA  NA  0 #> 3 1.2642730 0.0008913089  0 1.051353 NA  NA  0 #> 4 1.0383240 0.0024629578  0 1.056098 NA  NA  0 #> 5 1.9768815 0.0031380379  0 1.052206 NA  NA  0 #> 6 1.0602443 0.0140293204  0 1.049931 NA  NA  0 #>  #> $IgG #>          y1       alpha yb        r y0 mu1 t1 #> 1 0.5630924 0.003808514  0 1.017216 NA  NA  0 #> 2 0.9084731 0.004009900  0 1.021487 NA  NA  0 #> 3 1.3531416 0.001163992  0 1.013681 NA  NA  0 #> 4 0.7098593 0.004429380  0 1.021024 NA  NA  0 #> 5 0.9199583 0.002791685  0 1.020375 NA  NA  0 #> 6 8.4187094 0.003258891  0 1.017908 NA  NA  0 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams4.html","id":null,"dir":"Reference","previous_headings":"","what":"Salmonella SSI Response Parameters Data for Model 4 — salmonellaSSIParams4","title":"Salmonella SSI Response Parameters Data for Model 4 — salmonellaSSIParams4","text":"List data frames longitudinal parameters. data frame contains Monte Carlo samples antibody type.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salmonella SSI Response Parameters Data for Model 4 — salmonellaSSIParams4","text":"","code":"salmonellaSSIParams4"},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salmonella SSI Response Parameters Data for Model 4 — salmonellaSSIParams4","text":"list three dataframes: IgA dataframe containing 3000 rows 7 parameters IgA antibody. IgM dataframe containing 3000 rows 7 parameters IgM antibody. IgG dataframe containing 3000 rows 7 parameters IgG antibody.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/salmonellaSSIParams4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Salmonella SSI Response Parameters Data for Model 4 — salmonellaSSIParams4","text":"","code":"# Show first rows of every dataframe contained in salmonellaSSIParams4 lapply(salmonellaSSIParams4, head) #> $IgA #>          y1       alpha yb        r         y0        mu1        t1 #> 1 0.1645894 0.008301086  0 1.020289 0.11973340 0.12222920 2.6031943 #> 2 0.4967038 0.007181714  0 1.021778 0.39052803 0.14802164 1.6247227 #> 3 2.5087166 0.001178859  0 1.017500 2.37886174 0.17727577 0.2998108 #> 4 1.8760033 0.018867951  0 1.020985 1.81306536 0.15521542 0.2198533 #> 5 0.2381400 0.003545378  0 1.018420 0.21870973 0.11699959 0.7274678 #> 6 0.1075755 0.001709320  0 1.017080 0.09313794 0.08910887 1.6172527 #>  #> $IgM #>          y1        alpha yb        r        y0        mu1        t1 #> 1 0.6325777 0.0028957411  0 1.047555 0.5102927 0.07773161 2.7635934 #> 2 1.4144767 0.0328629331  0 1.039616 0.5753705 0.20969035 4.2896625 #> 3 1.2642730 0.0008913089  0 1.051353 1.1804183 0.07957789 0.8624049 #> 4 1.0383240 0.0024629578  0 1.056098 1.0077723 0.03253768 0.9178773 #> 5 1.9768815 0.0031380379  0 1.052206 1.2086867 0.11864577 4.1466813 #> 6 1.0602443 0.0140293204  0 1.049931 0.8761034 0.05988377 3.1856792 #>  #> $IgG #>          y1       alpha yb        r        y0        mu1        t1 #> 1 0.5630924 0.003808514  0 1.017216 0.5040835 0.11686141 0.9472916 #> 2 0.9084731 0.004009900  0 1.021487 0.7985884 0.25997719 0.4958881 #> 3 1.3531416 0.001163992  0 1.013681 0.7592344 0.17166853 3.3662183 #> 4 0.7098593 0.004429380  0 1.021024 0.6843716 0.06179318 0.5917449 #> 5 0.9199583 0.002791685  0 1.020375 0.8494778 0.16093737 0.4952642 #> 6 8.4187094 0.003258891  0 1.017908 3.5463722 1.59327615 0.5426124 #>"},{"path":"https://ucd-seg.github.io/serocalculator/reference/serocalculator.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating Infection Rates from Serological Data — serocalculator","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"Translates antibody levels measured (cross-sectional) population sample estimate frequency seroconversions (infections) occur sampled population.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/serocalculator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"detailed documentation type following R console: vignette(\"installation\", package = \"serocalculator\")vignette(\"tutorial\", package = \"serocalculator\")vignette(\"methodology\", package = \"serocalculator\")","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/serocalculator.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"Methods estimating seroincidence Teunis, P. F., van Eijkeren, J. C., Ang, C. W., van Duynhoven, Y. T., Simonsen, J. B., Strid, M. ., van Pelt, W. \"Biomarker dynamics: estimating infection rates serological data\" Statistics Medicine 31, . 20 (September 9, 2012): 2240--48. doi:10.1002/sim.5322. Simonsen, J., Molbak, K., Falkenhorst, G., Krogfelt, K. ., Linneberg, ., Teunis, P. F. \"Estimation incidences infectious diseases based antibody measurements\" Statistics Medicine 28, . 14 (June 30, 2009): 1882--95. doi:10.1002/sim.3592. Applications Monge, S., Teunis, P. F., Friesema, ., Franz, E., Ang, W., van Pelt, W., Mughini-Gras, L. \"Immune response-eliciting exposure Campylobacter vastly exceeds incidence clinically overt campylobacteriosis associated similar risk factors: nationwide serosurvey Netherlands\" Journal Infection, 2018, 1--7, doi:10.1016/j.jinf.2018.04.016 Kretzschmar, M., Teunis, P. F., Pebody, R. G. \"Incidence reproduction numbers pertussis: estimates serological social contact data five European countries\" PLoS Medicine 7, . 6 (June 1, 2010):e1000291. doi:10.1371/journal.pmed.1000291. Simonsen, J., Strid, M. ., Molbak, K., Krogfelt, K. ., Linneberg, ., Teunis, P. \"Sero-epidemiology tool study incidence Salmonella infections humans\" Epidemiology Infection 136, . 7 (July 1, 2008): 895--902. doi:10.1017/S0950268807009314 Simonsen, J., Teunis, P. F., van Pelt, W., van Duynhoven, Y., Krogfelt, K. ., Sadkowska-Todys, M., Molbak K. \"Usefulness seroconversion rates comparing infection pressures countries\" Epidemiology Infection, April 12, 2010, 1--8. doi:10.1017/S0950268810000750. Falkenhorst, G., Simonsen, J., Ceper, T. H., van Pelt, W., de Valk, H., Sadkowska-Todys, M., Zota, L., Kuusi, M., Jernberg, C., Rota, M. C., van Duynhoven, Y. T., Teunis, P. F., Krogfelt, K. ., Molbak, K. \"Serological cross-sectional studies salmonella incidence eight European countries: correlation incidence reported cases\" BMC Public Health 12, . 1 (July 15, 2012): 523--23. doi:10.1186/1471-2458-12-523. Teunis, P. F., Falkenhorst, G., Ang, C. W., Strid, M. ., De Valk, H., Sadkowska-Todys, M., Zota, L., Kuusi, M., Rota, M. C., Simonsen, J. B., Molbak, K., Van Duynhoven, Y. T., van Pelt, W. \"Campylobacter seroconversion rates selected countries European Union\" Epidemiology Infection 141, . 10 (2013): 2051--57. doi:10.1017/S0950268812002774. de Melker, H. E., Versteegh, F. G., Schellekens, J. F., Teunis, P. F., Kretzschmar, M. \"incidence Bordetella pertussis infections estimated population combination serological surveys\" Journal Infection 53, . 2 (August 1, 2006): 106--13. doi:10.1016/j.jinf.2005.10.020 Quantification seroresponse de Graaf, W. F., Kretzschmar, M. E., Teunis, P. F., Diekmann, O. \"two-phase within-host model immune response application serological profiles pertussis\" Epidemics 9 (2014):1--7. doi:10.1016/j.epidem.2014.08.002. Berbers, G. ., van de Wetering, M. S., van Gageldonk, P. G., Schellekens, J. F., Versteegh, F. G., Teunis, P.F. \"novel method evaluating natural vaccine induced serological responses Bordetella pertussis antigens\" Vaccine 31, . 36 (August 12, 2013): 3732--38. doi:10.1016/j.vaccine.2013.05.073. Versteegh, F. G., Mertens, P. L., de Melker, H. E., Roord, J. J., Schellekens, J. F., Teunis, P. F. \"Age-specific long-term course IgG antibodies pertussis toxin symptomatic infection Bordetella pertussis\" Epidemiology Infection 133, . 4 (August 1, 2005): 737--48. Teunis, P. F., van der Heijden, O. G., de Melker, H. E., Schellekens, J. F., Versteegh, F. G., Kretzschmar, M. E. \"Kinetics IgG antibody response pertussis toxin infection B. pertussis\" Epidemiology Infection 129, . 3 (December 10, 2002):479. doi:10.1017/S0950268802007896.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/serocalculator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"Author: Peter Teunis  Author: Jan van Eijkeren Contributor: Daniel Lewandowski  Contributor: Chantal Quinten  Maintainer: Doug Ezra Morrison","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/summary.seroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for Seroincidence Object — summary.seroincidence","title":"Summary Method for Seroincidence Object — summary.seroincidence","text":"Calculate seroincidence output seroincidence calculator estimateSeroincidence.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/summary.seroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for Seroincidence Object — summary.seroincidence","text":"","code":"# S3 method for seroincidence summary(   object,   ...,   quantiles = c(0.025, 0.975),   showDeviance = TRUE,   showConvergence = TRUE )"},{"path":"https://ucd-seg.github.io/serocalculator/reference/summary.seroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for Seroincidence Object — summary.seroincidence","text":"object dataframe containing output function estimateSeroincidence. ... Additional arguments affecting summary produced. quantiles vector length 2 specifying quantiles lower (first element) upper (second element) bounds lambda. Default = c(0.025, 0.975). showDeviance Logical flag (FALSE/TRUE) reporting deviance (-2*log(likelihood) estimated seroincidence. Default = TRUE. showConvergence Logical flag (FALSE/TRUE) reporting convergence (see help optim details). Default = TRUE.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/summary.seroincidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for Seroincidence Object — summary.seroincidence","text":"list following items: Results Dataframe maximum likelihood estimate lambda (  seroincidence) (column Lambda) corresponding lower (Lambda.lwr) upper   (Lambda.upr bounds.   Optionally Deviance (Negative log likelihood (NLL) estimated (maximum likelihood)   lambda) Covergence (Convergence indicator returned optim.   Value 0 indicates convergence) columns included. Antibodies Character vector names input antibodies used   estimateSeroincidence. Strata Character names strata used estimateSeroincidence. CensorLimits List cutoffs antibodies used   estimateSeroincidence.","code":""},{"path":"https://ucd-seg.github.io/serocalculator/reference/summary.seroincidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for Seroincidence Object — summary.seroincidence","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- estimateSeroincidence(...)  # calculate summary statistics for the seroincidence object seroincidenceSummary <- summary(seroincidence) }"}]
