[{"path":[]},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement . complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to serocalculator","title":"Contributing to serocalculator","text":"outlines propose change serocalculator. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to serocalculator","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to serocalculator","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to serocalculator","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serocalculator\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to serocalculator","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to serocalculator","text":"Please note serocalculator project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Enteric Fever Example","text":"vignette provides users example analysis using serocalculator package reproducing analysis Aiemjoy et al. (2022). review methods underlying analysis walk example enteric fever incidence Pakistan.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"methods","dir":"Articles","previous_headings":"","what":"Methods","title":"Enteric Fever Example","text":"serocalculator R package provides rapid computationally simple method calculating seroconversion rates, originally published Simonsen et al. (2009) Teunis et al. (2012), developed subsequent publications deGraaf et al. (2014), Teunis et al. (2016), Teunis Eijkeren (2020). short, longitudinal seroresponses confirmed cases known symptom onset date assumed represent time course human serum antibodies specific pathogen. Therefore, using longitudinal antibody dynamics cross–sectional sample antibodies human population, incidence estimate can calculated. details .","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"a-proxy-for-infection","dir":"Articles","previous_headings":"Methods","what":"A Proxy for Infection","title":"Enteric Fever Example","text":"exact time infection impossible measure individual, antibody levels measured cross–sectional population sample can translated estimate frequency seroconversions (infections) occur sampled population. presence many high antibody concentrations indicates many people population likely experienced infection recently, mostly low concentrations indicate low frequency infections sampled population. order interpret measured cross-sectional antibody concentrations terms incidence, must define antibody dynamic time understand generalized antibody response different times since infection. dynamic must quantified time include initial increase serum antibody concentration seroconversion occurs, followed gradual decrease antibodies wane. published studies, information time course serum antibody response obtained longitudinal follow–data cases symptomatic episode following infection. case, onset symptoms provides proxy time infection occurred.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"the-seroincidence-estimator","dir":"Articles","previous_headings":"Methods","what":"The Seroincidence Estimator","title":"Enteric Fever Example","text":"serocalculator package designed calculate incidence seroconversion using longitudinal seroresponse characteristics. distribution serum antibody concentrations cross–sectional population sample calculated function longitudinal seroresponse frequency seroconversion (seroincidence). Given seroresponse, marginal distribution antibody concentrations can fitted cross-sectional data thereby providing means estimate seroincidence.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"example-enteric-fever","dir":"Articles","previous_headings":"","what":"Example: Enteric Fever","title":"Enteric Fever Example","text":"example, users determine seroincidence enteric fever cross-sectional serosurveys conducted part SErologic Environmental Surveillance (SEES) enteric fever study Bangladesh, Nepal, Pakistan. Longitudinal antibody responses modeled 1420 blood culture-confirmed enteric fever cases enrolled countries. details published study can found : https://doi.org/10.1016/S2666-5247(22)00114-8.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"load-packages","dir":"Articles","previous_headings":"Example: Enteric Fever","what":"Load packages","title":"Enteric Fever Example","text":"first step conducting analysis load necessary packages.","code":"library(serocalculator) library(tidyverse) library(ggplot2)"},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"load-data","dir":"Articles","previous_headings":"Example: Enteric Fever","what":"Load data","title":"Enteric Fever Example","text":"Pathogen-specific sample datasets, noise parameters, longitudinal antibody dynamics serocalculator available Serocalculator Repository Open Science Framework (OSF). use function getAdditionalData pull data R environment.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"load-and-prepare-longitudinal-parameter-data","dir":"Articles","previous_headings":"Example: Enteric Fever > Load data","what":"Load and prepare longitudinal parameter data","title":"Enteric Fever Example","text":"first load longitudinal curve parameters set antibody decay parameters. example, parameters modeled Bayesian hierarchical models fit two-phase power-function decay models longitudinal antibody responses among confirmed enteric fever cases. parameters include following: \\(y_0\\) = baseline antibody response \\(y_1\\) = peak antibody responses \\(t_1\\) = time peak \\(\\alpha\\) = decay rate years (may need rescaled) \\(r\\) = decay shape also create additional variables \\(d\\), decay shape, 1-\\(r\\).","code":"#Import longitudinal antibody parameters from OSF  curve_param = getAdditionalData(fileURL =\"https://osf.io/download/rtw5k/\")"},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"load-and-prepare-cross-sectional-data","dir":"Articles","previous_headings":"Example: Enteric Fever > Load data","what":"Load and prepare cross-sectional data","title":"Enteric Fever Example","text":"Next, load sample cross-sectional data. use subset results SEES dataset. Ideally, representative sample general population without regard disease status. Later, limit analysis cross-sectional data Pakistan. selected hemolysin E (HlyE) target antigen IgG IgA target immunoglobulin isotypes. Users may select different serologic markers depending available data. original dataset, rename result age variables names required serocalculator.","code":"#Import cross-sectional data from OSF  pop_data <- getAdditionalData(fileURL =\"https://osf.io/download//n6cp3/\") %>%   rename(value = result,          age = Age)"},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"visualize-antibody-data","dir":"Articles","previous_headings":"Example: Enteric Fever > Load data","what":"Visualize antibody data","title":"Enteric Fever Example","text":"examine cross-sectional antibody data visualizing distribution quantitative antibody responses. , look distribution selected antigen isotype pairs, HlyE IgA HlyE IgG, across participating countries.  see across countries, data highly skewed majority responses lower end data long tails. Let’s get better look distribution log transforming antibody response value. also need update bin width.  log transformed, data looks much normally distributed. cases, log transformation best way visualize serologic data.","code":"#Create histograms  ggplot(pop_data, aes(x = value)) +   #geom_histogram(binwidth = 5, color = \"#000000\", fill = \"#009999\", alpha = 0.7) +   geom_histogram(aes(fill = Country), alpha = .7, color = \"black\") +   theme_minimal() +   labs(     title = \"Distribution of Cross-sectional Antibody Responses\",     x = \"Antibody Response Value\",     y = \"Frequency\"   ) +   facet_wrap(~Country + antigen_iso, nrow = 3) #Create log transformed histograms  ggplot(pop_data, aes(x = value)) +   #geom_histogram(binwidth = 0.05, color = \"#000000\", fill = \"#009999\", alpha = 0.7) +   geom_histogram(aes(fill = Country), alpha = .7, color = \"black\") +   scale_x_log10() +   theme_minimal() +   labs(     title = \"Distribution of Cross-sectional Antibody Responses (Log transformed)\",     x = \"Log10(Antibody Response Value)\",     y = \"Frequency\"   ) +   facet_wrap(~Country + antigen_iso, nrow = 3) #> Warning: Transformation introduced infinite values in continuous x-axis #> Warning: Removed 18 rows containing non-finite values (`stat_bin()`)."},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"load-noise-parameters","dir":"Articles","previous_headings":"Example: Enteric Fever","what":"Load noise parameters","title":"Enteric Fever Example","text":"Next, must set conditions based assumptions data error may need obe accounted . differ based background knowledge data. biological noise, \\(\\nu\\) (“nu”), represents error cross-reactivity antibodies. Measurement noise, \\(\\varepsilon\\) (“epsilon”), represents error laboratory testing process.","code":"#Import noise parameters from OSF  noise_param <- getAdditionalData(fileURL =\"https://osf.io/download//hqy4v/\") %>%   rename(y.low = llod) #rename lower bound"},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"estimate-seroincidence","dir":"Articles","previous_headings":"","what":"Estimate Seroincidence","title":"Enteric Fever Example","text":"Finally, ready begin seroincidence estimation. conduct two separate analyses using two distinct functions, est.incidence est.incidence., calculate overall seroincidence stratified seroincidence, respectively.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"overall-seroincidence","dir":"Articles","previous_headings":"Estimate Seroincidence","what":"Overall Seroincidence","title":"Enteric Fever Example","text":"Using function est.incidence, define starting value 0.2, also define initial estimate force infection (FOI, \\(\\lambda\\) (“lambda”)). filter Pakistan define datasets cross-sectional data (data), longitudinal parameters (curve_param), noise parameters (noise_param). also define antigen-isotype pairs included estimate.","code":"#Using est.incidence (no strata)  esttest = est.incidence(   stepmax = 1,   verbose = TRUE,   lambda_start=.2,   pop_data = pop_data %>% filter(Country == \"Pakistan\"),   curve_param = curve_param,    noise_param = noise_param %>% filter(Country == \"Pakistan\"),   antigen_isos = c(\"HlyE_IgG\", \"HlyE_IgA\") ) #> iteration = 0 #> Step: #> [1] 0 #> Parameter: #> [1] -1.609438 #> Function Value #> [1] 2434.836 #> Gradient: #> [1] 112.9062 #>  #> iteration = 1 #> Step: #> [1] -0.3013201 #> Parameter: #> [1] -1.910758 #> Function Value #> [1] 2420.488 #> Gradient: #> [1] -14.00558 #>  #> iteration = 2 #> Step: #> [1] 0.03325271 #> Parameter: #> [1] -1.877505 #> Function Value #> [1] 2420.236 #> Gradient: #> [1] -1.099217 #>  #> iteration = 3 #> Step: #> [1] 0.002832087 #> Parameter: #> [1] -1.874673 #> Function Value #> [1] 2420.234 #> Gradient: #> [1] 0.01306674 #>  #> iteration = 4 #> Parameter: #> [1] -1.874706 #> Function Value #> [1] 2420.234 #> Gradient: #> [1] -1.358391e-05 #>  #> Relative gradient close to zero. #> Current iterate is probably solution. #>  #>    user  system elapsed  #>  17.416   0.001  17.417  summary(esttest) #> # A tibble: 1 × 10 #>   est.start incidence.rate      SE CI.lwr CI.upr coverage log.lik iterations #>       <dbl>          <dbl>   <dbl>  <dbl>  <dbl>    <dbl>   <dbl>      <int> #> 1       0.2          0.153 0.00774  0.139  0.169     0.95  -2420.          4 #> # ℹ 2 more variables: antigen.isos <chr>, nlm.convergence.code <ord>"},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"stratified-seroincidence","dir":"Articles","previous_headings":"Estimate Seroincidence","what":"Stratified Seroincidence","title":"Enteric Fever Example","text":"can also produce stratified seroincidence estimates. stratify catchment area within Pakistan, users can select stratification variable.","code":"#Using est.incidence.by (strata)  estbytest = est.incidence.by(   stepmax = 1,   verbose = TRUE,   lambda_start=.3,   strata = c(\"catchment\"),   pop_data = pop_data %>% filter(Country == \"Pakistan\"),   curve_params = curve_param,    noise_params = noise_param %>% filter(Country == \"Pakistan\"),   build_graph = FALSE ) #> Warning in warn.missing.strata(data = curve_params, strata = select(strata, : curve_params is missing all strata variables, and will be used unstratified. #>  #> To avoid this warning, specify the desired set of stratifying variables in the `curve_strata_varnames` and `noise_strata_varnames` arguments to `est.incidence.by()`. #> Warning in warn.missing.strata(data = noise_params, strata = select(strata, : noise_params is missing all strata variables, and will be used unstratified. #>  #> To avoid this warning, specify the desired set of stratifying variables in the `curve_strata_varnames` and `noise_strata_varnames` arguments to `est.incidence.by()`. #> # A tibble: 2 × 3 #>   Stratum   catchment     n #>   <chr>     <chr>     <int> #> 1 Stratum 1 aku         294 #> 2 Stratum 2 kgh         200 #> # A tibble: 1 × 3 #>   Stratum   catchment     n #>   <chr>     <chr>     <int> #> 1 Stratum 1 aku         294 #> iteration = 0 #> Step: #> [1] 0 #> Parameter: #> [1] -1.203973 #> Function Value #> [1] 1453.51 #> Gradient: #> [1] 241.4326 #>  #> iteration = 1 #> Step: #> [1] -1 #> Parameter: #> [1] -2.203973 #> Function Value #> [1] 1357.35 #> Gradient: #> [1] -25.56654 #>  #> iteration = 2 #> Step: #> [1] 0.09575513 #> Parameter: #> [1] -2.108218 #> Function Value #> [1] 1355.804 #> Gradient: #> [1] -6.473402 #>  #> iteration = 3 #> Step: #> [1] 0.03246515 #> Parameter: #> [1] -2.075753 #> Function Value #> [1] 1355.704 #> Gradient: #> [1] 0.3352425 #>  #> iteration = 4 #> Step: #> [1] -0.001598512 #> Parameter: #> [1] -2.077351 #> Function Value #> [1] 1355.703 #> Gradient: #> [1] -0.003983894 #>  #> iteration = 5 #> Parameter: #> [1] -2.077332 #> Function Value #> [1] 1355.703 #> Gradient: #> [1] -2.955276e-06 #>  #> Relative gradient close to zero. #> Current iterate is probably solution. #>  #>    user  system elapsed  #>  11.343   0.004  11.348  #> # A tibble: 1 × 3 #>   Stratum   catchment     n #>   <chr>     <chr>     <int> #> 1 Stratum 2 kgh         200 #> iteration = 0 #> Step: #> [1] 0 #> Parameter: #> [1] -1.203973 #> Function Value #> [1] 1066.923 #> Gradient: #> [1] 73.03752 #>  #> iteration = 1 #> Step: #> [1] -0.4114013 #> Parameter: #> [1] -1.615374 #> Function Value #> [1] 1053.236 #> Gradient: #> [1] -4.498946 #>  #> iteration = 2 #> Step: #> [1] 0.02387099 #> Parameter: #> [1] -1.591503 #> Function Value #> [1] 1053.178 #> Gradient: #> [1] -0.3483076 #>  #> iteration = 3 #> Step: #> [1] 0.002003173 #> Parameter: #> [1] -1.5895 #> Function Value #> [1] 1053.177 #> Gradient: #> [1] 0.002194632 #>  #> iteration = 4 #> Parameter: #> [1] -1.589512 #> Function Value #> [1] 1053.177 #> Gradient: #> [1] -1.716554e-06 #>  #> Relative gradient close to zero. #> Current iterate is probably solution. #>  #>    user  system elapsed  #>   6.817   0.000   6.817  #>    user  system elapsed  #>  19.627   0.004  19.631  summary(estbytest) #> Seroincidence estimated given the following setup: #> a) Antigen isotypes   : HlyE_IgA, HlyE_IgG  #> b) Strata       : catchment  #>  #>  Seroincidence estimates: #> # A tibble: 2 × 13 #>   Stratum   catchment     n est.start incidence.rate      SE CI.lwr CI.upr #>   <chr>     <chr>     <int>     <dbl>          <dbl>   <dbl>  <dbl>  <dbl> #> 1 Stratum 1 aku         294       0.3          0.125 0.00860  0.109  0.143 #> 2 Stratum 2 kgh         200       0.3          0.204 0.0154   0.176  0.237 #> # ℹ 5 more variables: coverage <dbl>, log.lik <dbl>, iterations <int>, #> #   antigen.isos <chr>, nlm.convergence.code <ord>"},{"path":"https://ucd-serg.github.io/serocalculator/articles/enteric_fever_example.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Enteric Fever Example","text":"data, find overall estimated seroincidence enteric fever Pakistan 13.7 per 100 persons (95% CI: 12.4, 15.1). stratified catchment area, find area KGH higher incidence rate area AKU [18.6 per 100 persons (95% CI: 16.0, 21.5) vs. 11.1 per 100 persons (95% CI: 9.7, 12.7).","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"simulate-cross-sectional-data","dir":"Articles","previous_headings":"","what":"Simulate cross-sectional data","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"","code":"#set seed to reproduce results set.seed(54321)  # Specify the antibody-isotype responses to simulate antibodies = c(\"HlyE_IgA\", \"HlyE_IgG\")  # simulated incidence rate per person-year lambda <- 0.2;  # range covered in simulations lifespan <- c(0, 20);   # cross-sectional sample size nrep <- 1000  # biologic noise distribution dlims <- rbind(c(0, 0.5),c(0, 0.5))  #generate cross-sectional data csdata0 <- sim.cs(   curve_params = dmcmc,   lambda = lambda,   n.smpl = nrep,   age.rng = lifespan,   antigen_isos = antibodies,   n.mc = 0,   renew.params = TRUE,   add.noise = TRUE,   noise_limits = dlims )"},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"estimate-seroincidence","dir":"Articles","previous_headings":"","what":"Estimate seroincidence","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"need provide noise parameters analysis; , define directly code: also need convert data long format analysis: can plot distribution antibody responses simulated data.  can estimate incidence est.incidence(): can extract summary statistics summary(): can plot log-likelihood curve plot():  can set x-axis logarithmic scale, desired:","code":"cond <- data.frame(   antigen_iso = c(\"HlyE_IgG\", \"HlyE_IgA\"),   nu = c(0.5, 0.5),  # Biologic noise (nu)   eps = c(0, 0),                             # M noise (eps)   y.low = c(1, 1),                            # low cutoff (llod)   y.high = c(5e6, 5e6))                      # high cutoff (y.high) csdataL <-    csdata0 %>%    as_tibble() %>%   pivot_longer(     cols = c(\"HlyE_IgG\", \"HlyE_IgA\"),      names_to = \"antigen_iso\",      values_to = \"value\") ggplot(csdataL, aes(x=as.factor(antigen_iso), y= value)) +   geom_beeswarm(size= .2, alpha = .3, aes(color = antigen_iso), show.legend = F) +    geom_boxplot(outlier.colour = NA, fill = NA) +    scale_y_log10() +    theme_linedraw() +    labs(x=\"antigen - isotype\") est1 = est.incidence(   pop_data = csdataL,   curve_params = dmcmc,   noise_params = cond,   lambda_start = .1,   build_graph = T,   verbose = T, # print updates as the function runs   print_graph = F, # display the log-likelihood curve while `est.incidence()` is running   antigen_isos = antibodies) #> nrow(curve_params) = 8000 #> Initial negative log-likelihood: 6965.51373830999 #> building likelihood graph #> about to call `nlm()` #> iteration = 0 #> Step: #> [1] 0 #> Parameter: #> [1] -2.302585 #> Function Value #> [1] 6965.514 #> Gradient: #> [1] -599.4456 #>  #> iteration = 1 #> Step: #> [1] 0.7032254 #> Parameter: #> [1] -1.59936 #> Function Value #> [1] 6700.598 #> Gradient: #> [1] -115.3316 #>  #> iteration = 2 #> Step: #> [1] 0.167531 #> Parameter: #> [1] -1.431829 #> Function Value #> [1] 6693.393 #> Gradient: #> [1] 30.84863 #>  #> iteration = 3 #> Step: #> [1] -0.03535431 #> Parameter: #> [1] -1.467183 #> Function Value #> [1] 6692.862 #> Gradient: #> [1] -0.748492 #>  #> iteration = 4 #> Parameter: #> [1] -1.466346 #> Function Value #> [1] 6692.862 #> Gradient: #> [1] 0.004289 #>  #> Relative gradient close to zero. #> Current iterate is probably solution. #>  #> Elapsed time: #>    user  system elapsed  #>  15.813   0.000  15.814 summary(est1) #> # A tibble: 1 × 10 #>   est.start incidence.rate      SE CI.lwr CI.upr coverage log.lik iterations #>       <dbl>          <dbl>   <dbl>  <dbl>  <dbl>    <dbl>   <dbl>      <int> #> 1       0.1          0.231 0.00775  0.216  0.246     0.95  -6693.          4 #> # ℹ 2 more variables: antigen.isos <chr>, nlm.convergence.code <ord> plot(est1) plot(est1, log_x = TRUE)"},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"simulate-multiple-clusters-with-different-lambdas","dir":"Articles","previous_headings":"","what":"Simulate multiple clusters with different lambdas","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"preceding code chunk, determined can use 3 CPU cores run computations parallel. can plot distributions simulated responses","code":"library(parallel) library(doParallel) #> Loading required package: foreach #>  #> Attaching package: 'foreach' #> The following objects are masked from 'package:purrr': #>  #>     accumulate, when #> Loading required package: iterators library(doRNG) # for reproducible results #> Loading required package: rngtools library(rngtools) n_cores = max(1, parallel::detectCores() - 1) # n_cores = 1 print(n_cores) #> [1] 3 doParallel::registerDoParallel(cores = n_cores)  #number of clusters  nclus = 10;  # cross-sectional sample size nrep <- 100  #incidence rate in e lmbdaVec <- c(.05,.1, .15, .2, .3)  n_lambda = length(lmbdaVec)  #trying to reproduce results using parallel rng <- RNGseq(n_lambda * nclus, 1234)  sim.df <-    foreach(i = 1:length(lmbdaVec),            .combine = bind_rows) %:%   foreach(n = 1:nclus,             r = rng[(i - 1) * nclus + 1:nclus],            .combine = bind_rows) %dopar%    {     l = lmbdaVec[i]     rngtools::setRNG(r)     sim.cs(       lambda = l,       n.smpl = nrep,       age.rng = lifespan,       antigen_isos = antibodies,       n.mc = 0,       renew.params = TRUE,       add.noise = TRUE,       curve_params = dmcmc,       noise_limits = dlims     ) %>%        mutate(lambda.sim = l, cluster = n)    }  print(sim.df) #> # A tibble: 5,000 × 5 #>      age HlyE_IgA HlyE_IgG lambda.sim cluster #>    <dbl>    <dbl>    <dbl>      <dbl>   <int> #>  1 10.8     0.584    0.472       0.05       1 #>  2  4.87    0.964   24.2         0.05       1 #>  3 17.8     0.567    0.455       0.05       1 #>  4  7.63    0.521    0.544       0.05       1 #>  5 10.1     0.279    0.116       0.05       1 #>  6 16.8     1.20     1.48        0.05       1 #>  7 11.3     0.695    0.211       0.05       1 #>  8 18.5     0.525    0.692       0.05       1 #>  9 10.1     1.70     2.00        0.05       1 #> 10 16.8    93.1      4.18        0.05       1 #> # ℹ 4,990 more rows sim.df.l <- sim.df %>%   pivot_longer(cols = c(\"HlyE_IgG\", \"HlyE_IgA\"), values_to = c(\"value\"), names_to = c(\"antigen_iso\"))  ggplot(sim.df.l, aes(x = as.factor(cluster), y= value)) +   geom_beeswarm(size= .2, alpha = .3, aes(color = antigen_iso)) +    geom_boxplot(outlier.colour = NA, fill = NA) +    scale_y_log10() +    facet_wrap(~antigen_iso + lambda.sim, nrow = 2) +    theme_linedraw()"},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"estimate-incidence-in-each-cluster","dir":"Articles","previous_headings":"Simulate multiple clusters with different lambdas","what":"Estimate incidence in each cluster","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"summary(ests) produces tibble() extra meta-data: can explore summary table interactively using DT::datatable() can plot likelihood single simulated cluster subsetting simulation ests calling plot():  can also plot log-likelihood curves several clusters (computer might struggle plot many ):  log_x argument also works :","code":"ests =   sim.df %>%    as_tibble() %>%   pivot_longer(     cols = c(\"HlyE_IgG\", \"HlyE_IgA\"),      names_to = \"antigen_iso\",      values_to = \"value\") %>%   est.incidence.by(     curve_params = dmcmc,     noise_params = cond,     num_cores = n_cores,     strata = c(\"lambda.sim\", \"cluster\"),     curve_strata_varnames = NULL,     noise_strata_varnames = NULL,     verbose = TRUE,     build_graph = TRUE, # slows down the function substantially     antigen_isos = c(\"HlyE_IgG\", \"HlyE_IgA\")   ) #> Data has been stratified. #> Here are the strata that will be analyzed: #> # A tibble: 50 × 4 #>    Stratum    lambda.sim cluster     n #>    <chr>           <dbl>   <int> <int> #>  1 Stratum 1        0.05       1   100 #>  2 Stratum 2        0.05       2   100 #>  3 Stratum 3        0.05       3   100 #>  4 Stratum 4        0.05       4   100 #>  5 Stratum 5        0.05       5   100 #>  6 Stratum 6        0.05       6   100 #>  7 Stratum 7        0.05       7   100 #>  8 Stratum 8        0.05       8   100 #>  9 Stratum 9        0.05       9   100 #> 10 Stratum 10       0.05      10   100 #> # ℹ 40 more rows #> Setting up parallel processing with `num_cores` = 3. #> Elapsed time for parallelized code: #>    user  system elapsed  #>   0.278   0.064 135.398 summary(ests) #> Seroincidence estimated given the following setup: #> a) Antigen isotypes   : HlyE_IgG, HlyE_IgA  #> b) Strata       : lambda.sim, cluster  #>  #>  Seroincidence estimates: #> # A tibble: 50 × 14 #>    Stratum    lambda.sim cluster     n est.start incidence.rate      SE CI.lwr #>    <chr>           <dbl>   <int> <int>     <dbl>          <dbl>   <dbl>  <dbl> #>  1 Stratum 1        0.05       1   100       0.1         0.0597 0.00884 0.0446 #>  2 Stratum 2        0.05       2   100       0.1         0.0445 0.00710 0.0325 #>  3 Stratum 3        0.05       3   100       0.1         0.0560 0.00800 0.0423 #>  4 Stratum 4        0.05       4   100       0.1         0.0467 0.00757 0.0340 #>  5 Stratum 5        0.05       5   100       0.1         0.0548 0.00815 0.0409 #>  6 Stratum 6        0.05       6   100       0.1         0.0638 0.00933 0.0479 #>  7 Stratum 7        0.05       7   100       0.1         0.0452 0.00720 0.0331 #>  8 Stratum 8        0.05       8   100       0.1         0.0557 0.00818 0.0418 #>  9 Stratum 9        0.05       9   100       0.1         0.0573 0.00894 0.0422 #> 10 Stratum 10       0.05      10   100       0.1         0.0754 0.0103  0.0576 #> # ℹ 40 more rows #> # ℹ 6 more variables: CI.upr <dbl>, coverage <dbl>, log.lik <dbl>, #> #   iterations <int>, antigen.isos <chr>, nlm.convergence.code <ord> library(DT) summary(ests) |> DT::datatable() plot(ests[1]) plot(ests[1:5]) plot(ests[1:5], log_x = TRUE)"},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"nlm-convergence-codes","dir":"Articles","previous_headings":"Simulate multiple clusters with different lambdas > Estimate incidence in each cluster","what":"nlm() convergence codes","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"Make sure check nlm() exit codes (codes 3-5 indicate possible non-convergence): Solutions nlm() exit codes 3-5: 3: decrease stepmin argument est.incidence()/est.incidence.() 4: increase iterlim argument est.incidence()/est.incidence.() 5: increase stepmax argument est.incidence()/est.incidence.() can extract indices problematic strata, : clusters problems; let’s take look:  Visually, looks like approximately reached MLE, probably re-run clusters, adjusting nlm() settings appropriately, sure.","code":"summary(ests) |>   as_tibble() |> # removes extra meta-data   select(Stratum, nlm.convergence.code) |>    filter(nlm.convergence.code > 2)  #> # A tibble: 3 × 2 #>   Stratum    nlm.convergence.code #>   <chr>      <ord>                #> 1 Stratum 12 3                    #> 2 Stratum 25 3                    #> 3 Stratum 28 3 problem_strata =    which(summary(ests)$nlm.convergence.code > 2) |>    print() #> [1] 12 25 28 plot(ests[problem_strata], log_x = TRUE)"},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"plot-distribution-of-estimates-by-simulated-incidence-rate","dir":"Articles","previous_headings":"Simulate multiple clusters with different lambdas","what":"plot distribution of estimates by simulated incidence rate","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"Finally, can look simulation results:","code":"summary(ests) |> plot(xvar = 'lambda.sim')"},{"path":"https://ucd-serg.github.io/serocalculator/articles/simulate_xsectionalData.html","id":"extra-remove","dir":"Articles","previous_headings":"Simulate multiple clusters with different lambdas","what":"extra (remove?)","title":"Generate a simulated cross-sectional sample and estimate seroincidence","text":"can calculate log-likelihood data function incidence rate, even without running est.incidence().","code":"lik_HlyE_IgA = graph.loglik(   pop_data = csdataL,   curve_params =      dmcmc |>      dplyr::mutate(     alpha = .data$alpha * 365.25,     d = .data$r - 1),   noise_params = cond,   antigen_isos = \"HlyE_IgA\",   log_x = TRUE ) |>    print() lik_HlyE_IgG = graph.loglik(   pop_data = csdataL,   curve_params =      dmcmc |>      dplyr::mutate(     alpha = .data$alpha * 365.25,     d = .data$r - 1),   noise_params = cond,   antigen_isos = \"HlyE_IgG\",   log_x = TRUE ) |>    print() lik_both = graph.loglik(   pop_data = csdataL,   curve_params =      dmcmc |>     dplyr::mutate(     alpha = .data$alpha * 365.25,     d = .data$r - 1),   noise_params = cond,   antigen_isos = c(\"HlyE_IgG\", \"HlyE_IgA\"),   log_x = TRUE ) |>    print()"},{"path":"https://ucd-serg.github.io/serocalculator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.            Author method original code. Kristina Lai. Author. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author, maintainer.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Lai K, Aiemjoy K, Morrison D (2023). serocalculator: Estimating Infection Rates Serological Data. R package version 0.3.2, https://ucd-serg.github.io/serocalculator/, https://github.com/UCD-SERG/serocalculator.","code":"@Manual{,   title = {serocalculator: Estimating Infection Rates from Serological Data},   author = {Peter Teunis and Kristina Lai and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2023},   note = {R package version 0.3.2, https://ucd-serg.github.io/serocalculator/},   url = {https://github.com/UCD-SERG/serocalculator}, }"},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"serocalculator","dir":"","previous_headings":"","what":"Estimating Infection Rates from Serological Data","title":"Estimating Infection Rates from Serological Data","text":"Antibody levels measured cross–sectional population sample can translated estimate frequency seroconversions (infections) occur sampled population. words, presence many high antibody titres indicates many individuals likely experienced infection recently burden disease high population, low titres indicate low frequency infections sampled population therefore lower burden disease. serocalculator package designed use longitudinal response characteristics using set modeled parameters characterizing longitudinal response selected serum antibodies.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"installing-r","dir":"","previous_headings":"","what":"Installing R","title":"Estimating Infection Rates from Serological Data","text":"serocalculator package written R, free, open-source software program. end user package must access working installation R software. recommend installing base R Graphical User Interfaces (GUI) R RStudio. need download install R /RStudio, recommend following tutorial Hands Programming R Garrett Grolemund: Installing R RStudio: https://rstudio-education.github.io/hopr/starting.html","code":""},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"installing-the-serocalculator-package","dir":"","previous_headings":"","what":"Installing the Serocalculator Package","title":"Estimating Infection Rates from Serological Data","text":"serocalculator package must installed R first use. November 21, 2023, serocalculator still development. install development version, must install devtools R package download serocalculator GitHub. Enter code R console install packages:","code":"# Install the devtools package and the development version of serocalculator install.packages(\"devtools\") devtools::install_github(\"ucd-serg/serocalculator\")"},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"post-installation","dir":"","previous_headings":"Installing the Serocalculator Package","what":"Post-installation","title":"Estimating Infection Rates from Serological Data","text":"Successful installation can confirmed loading package RStudio workspaceand exploring help files manuals distributed package: Additionally, package details can found executing following commands:","code":"# Load package \"seroincidence\". library(serocalculator)  # Show R help for the package. ?serocalculator  # Show tutorial for the package. vignette(topic = \"tutorial\", package = \"serocalculator\") # Show description. packageDescription(\"serocalculator\")  # Show citation. citation(\"serocalculator\")"},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"a-note-for-windows-users","dir":"","previous_headings":"Installing the Serocalculator Package","what":"A Note for Windows Users","title":"Estimating Infection Rates from Serological Data","text":"Windows users need install Rtools, contains collection tools building employing R packages still development. can done either devtools package installation, independently devtools already installed.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"during-devtools-installation","dir":"","previous_headings":"Installing the Serocalculator Package > A Note for Windows Users","what":"During devtools installation:","title":"Estimating Infection Rates from Serological Data","text":"prompted install additional build tools, select “Yes” Rtools installed. Click Yes install Rtools along devtools package","code":""},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"independently","dir":"","previous_headings":"Installing the Serocalculator Package > A Note for Windows Users","what":"Independently:","title":"Estimating Infection Rates from Serological Data","text":"Download Rtools https://cran.r-project.org/bin/windows/Rtools/ Run installer Rtools installation may see window asking “Select Additional Tasks”. select box “Edit system PATH”. devtools RStudio put Rtools PATH automatically needed. select box “Save version information registry”. selected default.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Estimating Infection Rates from Serological Data","text":"need assistance encounter clear bug, please file issue minimal reproducible example GitHub. Another great resource Epidemiologist R Handbook, includes introductory page asking help R packages via GitHub: https://epirhandbook.com/en/getting-help.html","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/df.to.array.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame (or tibble) into a multidimensional array — df.to.array","title":"Convert a data.frame (or tibble) into a multidimensional array — df.to.array","text":"Convert data.frame (tibble) multidimensional array","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/df.to.array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame (or tibble) into a multidimensional array — df.to.array","text":"","code":"df.to.array(df, dim_var_names, value_var_name = \"value\")"},{"path":"https://ucd-serg.github.io/serocalculator/reference/df.to.array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame (or tibble) into a multidimensional array — df.to.array","text":"df data.frame() (tibble::tibble()) long format (row contains one value intended array) dim_var_names character() vector variable names df. variables factors, warning produced. value_var_name character() variable containing variable name df contains values intended array.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/df.to.array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame (or tibble) into a multidimensional array — df.to.array","text":"array() dimensions defined variables df listed dim_var_names","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/df.to.array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data.frame (or tibble) into a multidimensional array — df.to.array","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidyr) df = iris |>   tidyr::pivot_longer(   names_to = \"parameter\",   cols = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Width\", \"Petal.Length\") ) |>   mutate(parameter = factor(parameter, levels = unique(parameter)))   df |> serocalculator:::df.to.array(dim_var_names = c(\"parameter\", \"Species\")) #> , , obs = 1 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        7.0       6.3 #>   Sepal.Width     3.5        3.2       3.3 #>   Petal.Width     0.2        1.4       2.5 #>   Petal.Length    1.4        4.7       6.0 #>  #> , , obs = 2 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.9        6.4       5.8 #>   Sepal.Width     3.0        3.2       2.7 #>   Petal.Width     0.2        1.5       1.9 #>   Petal.Length    1.4        4.5       5.1 #>  #> , , obs = 3 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.7        6.9       7.1 #>   Sepal.Width     3.2        3.1       3.0 #>   Petal.Width     0.2        1.5       2.1 #>   Petal.Length    1.3        4.9       5.9 #>  #> , , obs = 4 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.6        5.5       6.3 #>   Sepal.Width     3.1        2.3       2.9 #>   Petal.Width     0.2        1.3       1.8 #>   Petal.Length    1.5        4.0       5.6 #>  #> , , obs = 5 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        6.5       6.5 #>   Sepal.Width     3.6        2.8       3.0 #>   Petal.Width     0.2        1.5       2.2 #>   Petal.Length    1.4        4.6       5.8 #>  #> , , obs = 6 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.4        5.7       7.6 #>   Sepal.Width     3.9        2.8       3.0 #>   Petal.Width     0.4        1.3       2.1 #>   Petal.Length    1.7        4.5       6.6 #>  #> , , obs = 7 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.6        6.3       4.9 #>   Sepal.Width     3.4        3.3       2.5 #>   Petal.Width     0.3        1.6       1.7 #>   Petal.Length    1.4        4.7       4.5 #>  #> , , obs = 8 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        4.9       7.3 #>   Sepal.Width     3.4        2.4       2.9 #>   Petal.Width     0.2        1.0       1.8 #>   Petal.Length    1.5        3.3       6.3 #>  #> , , obs = 9 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.4        6.6       6.7 #>   Sepal.Width     2.9        2.9       2.5 #>   Petal.Width     0.2        1.3       1.8 #>   Petal.Length    1.4        4.6       5.8 #>  #> , , obs = 10 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.9        5.2       7.2 #>   Sepal.Width     3.1        2.7       3.6 #>   Petal.Width     0.1        1.4       2.5 #>   Petal.Length    1.5        3.9       6.1 #>  #> , , obs = 11 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.4        5.0       6.5 #>   Sepal.Width     3.7        2.0       3.2 #>   Petal.Width     0.2        1.0       2.0 #>   Petal.Length    1.5        3.5       5.1 #>  #> , , obs = 12 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.8        5.9       6.4 #>   Sepal.Width     3.4        3.0       2.7 #>   Petal.Width     0.2        1.5       1.9 #>   Petal.Length    1.6        4.2       5.3 #>  #> , , obs = 13 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.8        6.0       6.8 #>   Sepal.Width     3.0        2.2       3.0 #>   Petal.Width     0.1        1.0       2.1 #>   Petal.Length    1.4        4.0       5.5 #>  #> , , obs = 14 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.3        6.1       5.7 #>   Sepal.Width     3.0        2.9       2.5 #>   Petal.Width     0.1        1.4       2.0 #>   Petal.Length    1.1        4.7       5.0 #>  #> , , obs = 15 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.8        5.6       5.8 #>   Sepal.Width     4.0        2.9       2.8 #>   Petal.Width     0.2        1.3       2.4 #>   Petal.Length    1.2        3.6       5.1 #>  #> , , obs = 16 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.7        6.7       6.4 #>   Sepal.Width     4.4        3.1       3.2 #>   Petal.Width     0.4        1.4       2.3 #>   Petal.Length    1.5        4.4       5.3 #>  #> , , obs = 17 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.4        5.6       6.5 #>   Sepal.Width     3.9        3.0       3.0 #>   Petal.Width     0.4        1.5       1.8 #>   Petal.Length    1.3        4.5       5.5 #>  #> , , obs = 18 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        5.8       7.7 #>   Sepal.Width     3.5        2.7       3.8 #>   Petal.Width     0.3        1.0       2.2 #>   Petal.Length    1.4        4.1       6.7 #>  #> , , obs = 19 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.7        6.2       7.7 #>   Sepal.Width     3.8        2.2       2.6 #>   Petal.Width     0.3        1.5       2.3 #>   Petal.Length    1.7        4.5       6.9 #>  #> , , obs = 20 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        5.6       6.0 #>   Sepal.Width     3.8        2.5       2.2 #>   Petal.Width     0.3        1.1       1.5 #>   Petal.Length    1.5        3.9       5.0 #>  #> , , obs = 21 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.4        5.9       6.9 #>   Sepal.Width     3.4        3.2       3.2 #>   Petal.Width     0.2        1.8       2.3 #>   Petal.Length    1.7        4.8       5.7 #>  #> , , obs = 22 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        6.1       5.6 #>   Sepal.Width     3.7        2.8       2.8 #>   Petal.Width     0.4        1.3       2.0 #>   Petal.Length    1.5        4.0       4.9 #>  #> , , obs = 23 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.6        6.3       7.7 #>   Sepal.Width     3.6        2.5       2.8 #>   Petal.Width     0.2        1.5       2.0 #>   Petal.Length    1.0        4.9       6.7 #>  #> , , obs = 24 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        6.1       6.3 #>   Sepal.Width     3.3        2.8       2.7 #>   Petal.Width     0.5        1.2       1.8 #>   Petal.Length    1.7        4.7       4.9 #>  #> , , obs = 25 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.8        6.4       6.7 #>   Sepal.Width     3.4        2.9       3.3 #>   Petal.Width     0.2        1.3       2.1 #>   Petal.Length    1.9        4.3       5.7 #>  #> , , obs = 26 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        6.6       7.2 #>   Sepal.Width     3.0        3.0       3.2 #>   Petal.Width     0.2        1.4       1.8 #>   Petal.Length    1.6        4.4       6.0 #>  #> , , obs = 27 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        6.8       6.2 #>   Sepal.Width     3.4        2.8       2.8 #>   Petal.Width     0.4        1.4       1.8 #>   Petal.Length    1.6        4.8       4.8 #>  #> , , obs = 28 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.2        6.7       6.1 #>   Sepal.Width     3.5        3.0       3.0 #>   Petal.Width     0.2        1.7       1.8 #>   Petal.Length    1.5        5.0       4.9 #>  #> , , obs = 29 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.2        6.0       6.4 #>   Sepal.Width     3.4        2.9       2.8 #>   Petal.Width     0.2        1.5       2.1 #>   Petal.Length    1.4        4.5       5.6 #>  #> , , obs = 30 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.7        5.7       7.2 #>   Sepal.Width     3.2        2.6       3.0 #>   Petal.Width     0.2        1.0       1.6 #>   Petal.Length    1.6        3.5       5.8 #>  #> , , obs = 31 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.8        5.5       7.4 #>   Sepal.Width     3.1        2.4       2.8 #>   Petal.Width     0.2        1.1       1.9 #>   Petal.Length    1.6        3.8       6.1 #>  #> , , obs = 32 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.4        5.5       7.9 #>   Sepal.Width     3.4        2.4       3.8 #>   Petal.Width     0.4        1.0       2.0 #>   Petal.Length    1.5        3.7       6.4 #>  #> , , obs = 33 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.2        5.8       6.4 #>   Sepal.Width     4.1        2.7       2.8 #>   Petal.Width     0.1        1.2       2.2 #>   Petal.Length    1.5        3.9       5.6 #>  #> , , obs = 34 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.5        6.0       6.3 #>   Sepal.Width     4.2        2.7       2.8 #>   Petal.Width     0.2        1.6       1.5 #>   Petal.Length    1.4        5.1       5.1 #>  #> , , obs = 35 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.9        5.4       6.1 #>   Sepal.Width     3.1        3.0       2.6 #>   Petal.Width     0.2        1.5       1.4 #>   Petal.Length    1.5        4.5       5.6 #>  #> , , obs = 36 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        6.0       7.7 #>   Sepal.Width     3.2        3.4       3.0 #>   Petal.Width     0.2        1.6       2.3 #>   Petal.Length    1.2        4.5       6.1 #>  #> , , obs = 37 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.5        6.7       6.3 #>   Sepal.Width     3.5        3.1       3.4 #>   Petal.Width     0.2        1.5       2.4 #>   Petal.Length    1.3        4.7       5.6 #>  #> , , obs = 38 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.9        6.3       6.4 #>   Sepal.Width     3.6        2.3       3.1 #>   Petal.Width     0.1        1.3       1.8 #>   Petal.Length    1.4        4.4       5.5 #>  #> , , obs = 39 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.4        5.6       6.0 #>   Sepal.Width     3.0        3.0       3.0 #>   Petal.Width     0.2        1.3       1.8 #>   Petal.Length    1.3        4.1       4.8 #>  #> , , obs = 40 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        5.5       6.9 #>   Sepal.Width     3.4        2.5       3.1 #>   Petal.Width     0.2        1.3       2.1 #>   Petal.Length    1.5        4.0       5.4 #>  #> , , obs = 41 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        5.5       6.7 #>   Sepal.Width     3.5        2.6       3.1 #>   Petal.Width     0.3        1.2       2.4 #>   Petal.Length    1.3        4.4       5.6 #>  #> , , obs = 42 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.5        6.1       6.9 #>   Sepal.Width     2.3        3.0       3.1 #>   Petal.Width     0.3        1.4       2.3 #>   Petal.Length    1.3        4.6       5.1 #>  #> , , obs = 43 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.4        5.8       5.8 #>   Sepal.Width     3.2        2.6       2.7 #>   Petal.Width     0.2        1.2       1.9 #>   Petal.Length    1.3        4.0       5.1 #>  #> , , obs = 44 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        5.0       6.8 #>   Sepal.Width     3.5        2.3       3.2 #>   Petal.Width     0.6        1.0       2.3 #>   Petal.Length    1.6        3.3       5.9 #>  #> , , obs = 45 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        5.6       6.7 #>   Sepal.Width     3.8        2.7       3.3 #>   Petal.Width     0.4        1.3       2.5 #>   Petal.Length    1.9        4.2       5.7 #>  #> , , obs = 46 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.8        5.7       6.7 #>   Sepal.Width     3.0        3.0       3.0 #>   Petal.Width     0.3        1.2       2.3 #>   Petal.Length    1.4        4.2       5.2 #>  #> , , obs = 47 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.1        5.7       6.3 #>   Sepal.Width     3.8        2.9       2.5 #>   Petal.Width     0.2        1.3       1.9 #>   Petal.Length    1.6        4.2       5.0 #>  #> , , obs = 48 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    4.6        6.2       6.5 #>   Sepal.Width     3.2        2.9       3.0 #>   Petal.Width     0.2        1.3       2.0 #>   Petal.Length    1.4        4.3       5.2 #>  #> , , obs = 49 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.3        5.1       6.2 #>   Sepal.Width     3.7        2.5       3.4 #>   Petal.Width     0.2        1.1       2.3 #>   Petal.Length    1.5        3.0       5.4 #>  #> , , obs = 50 #>  #>               Species #> parameter      setosa versicolor virginica #>   Sepal.Length    5.0        5.7       5.9 #>   Sepal.Width     3.3        2.8       3.0 #>   Petal.Width     0.2        1.3       1.8 #>   Petal.Length    1.4        4.1       5.1 #>"},{"path":"https://ucd-serg.github.io/serocalculator/reference/dot-nll.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative log-likelihood — .nll","title":"Calculate negative log-likelihood — .nll","text":"llik(), except negated requiring lambda log scale (used combination nlm(), ensure optimization search stray negative values lambda).","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/dot-nll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative log-likelihood — .nll","text":"","code":".nll(log.lambda, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/dot-nll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate negative log-likelihood — .nll","text":"log.lambda natural logarithm incidence rate ... Arguments passed llik pop_data data.frame() cross-sectional serology data per antibody age, additional columns antigen_isos Character vector listing one antigen isotypes. Values must match pop_data. curve_params data.frame() containing MCMC samples parameters Bayesian posterior distribution longitudinal decay curve model. parameter columns must named: antigen_iso: character() vector indicating antigen-isotype combinations iter: integer() vector indicating MCMC sampling iterations y0: baseline antibody level $t=0$ ($y(t=0)$) y1: antibody peak level (ELISA units) t1: duration infection alpha: antibody decay rate (1/days current longitudinal parameter sets) r: shape factor antibody decay noise_params data.frame() (tibble::tibble()) containing following variables, specifying noise parameters antigen isotype: antigen_iso: antigen isotype whose noise parameters specified row nu: biological noise eps: measurement noise y.low: lower limit detection current antigen isotype y.high: upper limit detection current antigen isotype verbose logical: TRUE, print verbose log information console","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/dot-nll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate negative log-likelihood — .nll","text":"negative log-likelihood data current parameter values","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Seroincidence — est.incidence.by","title":"Estimate Seroincidence — est.incidence.by","text":"Function estimate seroincidences based cross-section serology data longitudinal response model.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Seroincidence — est.incidence.by","text":"","code":"est.incidence.by(   pop_data,   curve_params,   noise_params,   strata,   curve_strata_varnames = strata,   noise_strata_varnames = strata,   antigen_isos = unique(pull(pop_data, \"antigen_iso\")),   lambda_start = 0.1,   build_graph = FALSE,   num_cores = 1L,   verbose = FALSE,   print_graph = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Seroincidence — est.incidence.by","text":"pop_data data.frame() cross-sectional serology data per antibody age, additional columns identify possible strata. curve_params data.frame() containing MCMC samples parameters Bayesian posterior distribution longitudinal decay curve model. parameter columns must named: antigen_iso: character() vector indicating antigen-isotype combinations iter: integer() vector indicating MCMC sampling iterations y0: baseline antibody level $t=0$ ($y(t=0)$) y1: antibody peak level (ELISA units) t1: duration infection alpha: antibody decay rate (1/days current longitudinal parameter sets) r: shape factor antibody decay noise_params data.frame() (tibble::tibble()) containing following variables, specifying noise parameters antigen isotype: antigen_iso: antigen isotype whose noise parameters specified row nu: biological noise eps: measurement noise y.low: lower limit detection current antigen isotype y.high: upper limit detection current antigen isotype strata Character vector stratum-defining variables. Values must variable names pop_data. curve_strata_varnames subset strata. Values must variable names curve_params. Default = \"\". noise_strata_varnames subset strata. Values must variable names noise_params. Default = \"\". antigen_isos Character vector one antibody names. Values must match pop_data lambda_start starting guess incidence rate, years/event. build_graph whether graph log-likelihood function across range incidence rates (lambda values) num_cores Number processor cores use calculations computing strata. set 1 package parallel available, computations executed parallel. Default = 1L. verbose logical: TRUE, print verbose log information console print_graph whether display log-likelihood curve graph course running est.incidence() ... Arguments passed est.incidence, stats::nlm stepmin positive scalar providing minimum allowable relative step length. stepmax positive scalar gives maximum allowable     scaled step length.  stepmax used prevent steps     cause optimization function overflow, prevent     algorithm leaving area interest parameter space,     detect divergence algorithm. stepmax chosen     small enough prevent first two occurrences,     larger anticipated reasonable step. typsize estimate size parameter     minimum. fscale estimate size f minimum. ndigit number significant digits function f. gradtol positive scalar giving tolerance     scaled gradient considered close enough zero     terminate algorithm.  scaled gradient     measure relative change f direction     p[] divided relative change p[]. iterlim positive integer specifying maximum number     iterations performed program terminated. check.analyticals logical scalar specifying whether     analytic gradients Hessians, supplied,     checked numerical derivatives initial parameter     values. can help detect incorrectly formulated gradients     Hessians.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Seroincidence — est.incidence.by","text":"strata meaningful inputs: object class \"seroincidence.\"; .e., list \"seroincidence\" objects est.incidence(), one stratum, meta-data attributes. strata missing, NULL, NA, \"\": object class \"seroincidence\".","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Seroincidence — est.incidence.by","text":"strata left empty, warning produced, recommending use est.incidence() unstratified analyses, data passed est.incidence(). reason want use est.incidence.() strata instead calling est.incidence(), may use NA, NULL, \"\" strata argument avoid warning.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the maximum likelihood estimate of the incidence rate parameter — est.incidence","title":"Find the maximum likelihood estimate of the incidence rate parameter — est.incidence","text":"function models seroincidence using maximum likelihood estimation; , finds value seroincidence parameter maximizes likelihood (.e., joint probability) data.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the maximum likelihood estimate of the incidence rate parameter — est.incidence","text":"","code":"est.incidence(   pop_data,   curve_params,   noise_params,   antigen_isos = unique(pop_data$antigen_iso),   lambda_start = 0.1,   stepmin = 1e-08,   stepmax = 3,   verbose = FALSE,   build_graph = FALSE,   print_graph = build_graph & verbose,   ... )"},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the maximum likelihood estimate of the incidence rate parameter — est.incidence","text":"pop_data data.frame() cross-sectional serology data per antibody age, additional columns curve_params data.frame() containing MCMC samples parameters Bayesian posterior distribution longitudinal decay curve model. parameter columns must named: antigen_iso: character() vector indicating antigen-isotype combinations iter: integer() vector indicating MCMC sampling iterations y0: baseline antibody level $t=0$ ($y(t=0)$) y1: antibody peak level (ELISA units) t1: duration infection alpha: antibody decay rate (1/days current longitudinal parameter sets) r: shape factor antibody decay noise_params data.frame() (tibble::tibble()) containing following variables, specifying noise parameters antigen isotype: antigen_iso: antigen isotype whose noise parameters specified row nu: biological noise eps: measurement noise y.low: lower limit detection current antigen isotype y.high: upper limit detection current antigen isotype antigen_isos Character vector one antibody names. Values must match pop_data lambda_start starting guess incidence rate, years/event. stepmin positive scalar providing minimum allowable relative step length. stepmax positive scalar gives maximum allowable     scaled step length.  stepmax used prevent steps     cause optimization function overflow, prevent     algorithm leaving area interest parameter space,     detect divergence algorithm. stepmax chosen     small enough prevent first two occurrences,     larger anticipated reasonable step. verbose logical: TRUE, print verbose log information console build_graph whether graph log-likelihood function across range incidence rates (lambda values) print_graph whether display log-likelihood curve graph course running est.incidence() ... Arguments passed stats::nlm typsize estimate size parameter     minimum. fscale estimate size f minimum. ndigit number significant digits function f. gradtol positive scalar giving tolerance     scaled gradient considered close enough zero     terminate algorithm.  scaled gradient     measure relative change f direction     p[] divided relative change p[]. iterlim positive integer specifying maximum number     iterations performed program terminated. check.analyticals logical scalar specifying whether     analytic gradients Hessians, supplied,     checked numerical derivatives initial parameter     values. can help detect incorrectly formulated gradients     Hessians.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/est.incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the maximum likelihood estimate of the incidence rate parameter — est.incidence","text":"\"seroincidence\" object, stats::nlm() fit object extra meta-data attributes lambda_start, antigen_isos, ll_graph","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/fdev.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate negative log-likelihood (deviance) — fdev","title":"Calculate negative log-likelihood (deviance) — fdev","text":"description added ","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/fdev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate negative log-likelihood (deviance) — fdev","text":"","code":"fdev(lambda, csdata, lnpars, cond)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/fdev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate negative log-likelihood (deviance) — fdev","text":"lambda incidence parameter, events per person-year csdata cross-sectional sample data containing variables value age lnpars longitudinal antibody decay model parameters alpha, y1, d cond measurement noise parameters nu, eps, y.low, y.high","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/getAdditionalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Additional Data — getAdditionalData","title":"Get Additional Data — getAdditionalData","text":"Retrieves additional data internet. data format must .RDS zipped .RDS. purpose function download data longitudinal response parameters online repository population data.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/getAdditionalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Additional Data — getAdditionalData","text":"","code":"getAdditionalData(fileURL, savePath = NULL)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/getAdditionalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Additional Data — getAdditionalData","text":"fileURL URL file downloaded. savePath Folder directory filename save downloaded unzipped (needed) file. File saved argument NULL. Optional. Default = NULL.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/getAdditionalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Additional Data — getAdditionalData","text":"R object stored file indicated fileURL input Data object","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/getAdditionalData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Additional Data — getAdditionalData","text":"Data package available : https://osf.io/ne8pc/files/osfstorage can save data chosen directory using optional savePath argument. Specify file path file name. Large datasets may timeout. , can increase download time updating maximum timeout time code . (Ex: increase 300 1000) options(timeout = max(300, getOption(\"timeout\")))","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/getAdditionalData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Additional Data — getAdditionalData","text":"","code":"if (FALSE) { curve_param_samples =   getAdditionalData(     fileURL = \"https://osf.io/download/bhfvx\")  # optionally, save the data to disk curve_param_samples =   getAdditionalData(     fileURL = \"https://osf.io/download/bhfvx\",     savePath = \"~/Downloads/curv_params.rds\") }"},{"path":"https://ucd-serg.github.io/serocalculator/reference/graph.loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph log-likelihood of data — graph.loglik","title":"Graph log-likelihood of data — graph.loglik","text":"Graph log-likelihood data","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/graph.loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph log-likelihood of data — graph.loglik","text":"","code":"graph.loglik(   ...,   x = 10^seq(-3, 0, by = 0.1),   highlight_points = NULL,   highlight_point_names = \"highlight_points\",   log_x = FALSE )"},{"path":"https://ucd-serg.github.io/serocalculator/reference/graph.loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph log-likelihood of data — graph.loglik","text":"... Arguments passed llik pop_data data.frame() cross-sectional serology data per antibody age, additional columns antigen_isos Character vector listing one antigen isotypes. Values must match pop_data. curve_params data.frame() containing MCMC samples parameters Bayesian posterior distribution longitudinal decay curve model. parameter columns must named: antigen_iso: character() vector indicating antigen-isotype combinations iter: integer() vector indicating MCMC sampling iterations y0: baseline antibody level $t=0$ ($y(t=0)$) y1: antibody peak level (ELISA units) t1: duration infection alpha: antibody decay rate (1/days current longitudinal parameter sets) r: shape factor antibody decay noise_params data.frame() (tibble::tibble()) containing following variables, specifying noise parameters antigen isotype: antigen_iso: antigen isotype whose noise parameters specified row nu: biological noise eps: measurement noise y.low: lower limit detection current antigen isotype y.high: upper limit detection current antigen isotype verbose logical: TRUE, print verbose log information console lambda incidence parameter, events per person-year x sequence lambda values graph highlight_points possible highlighted value highlight_point_names labels highlighted points log_x x-axis logarithmic scale (TRUE) linear scale (FALSE, default)?","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/graph.loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph log-likelihood of data — graph.loglik","text":"ggplot2::ggplot()","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/llik.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate log-likelihood — llik","title":"Calculate log-likelihood — llik","text":"Calculates log-likelihood set cross-sectional antibody response data, given incidence rate (lambda) value.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/llik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate log-likelihood — llik","text":"","code":"llik(   lambda,   pop_data,   antigen_isos,   curve_params,   noise_params,   verbose = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serocalculator/reference/llik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate log-likelihood — llik","text":"lambda incidence parameter, events per person-year pop_data data.frame() cross-sectional serology data per antibody age, additional columns antigen_isos Character vector listing one antigen isotypes. Values must match pop_data. curve_params data.frame() containing MCMC samples parameters Bayesian posterior distribution longitudinal decay curve model. parameter columns must named: antigen_iso: character() vector indicating antigen-isotype combinations iter: integer() vector indicating MCMC sampling iterations y0: baseline antibody level $t=0$ ($y(t=0)$) y1: antibody peak level (ELISA units) t1: duration infection alpha: antibody decay rate (1/days current longitudinal parameter sets) r: shape factor antibody decay noise_params data.frame() (tibble::tibble()) containing following variables, specifying noise parameters antigen isotype: antigen_iso: antigen isotype whose noise parameters specified row nu: biological noise eps: measurement noise y.low: lower limit detection current antigen isotype y.high: upper limit detection current antigen isotype verbose logical: TRUE, print verbose log information console ... additional arguments passed functions (currently used).","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/llik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate log-likelihood — llik","text":"log-likelihood data current parameter values","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot seroincidence.by log-likelihoods — plot.seroincidence.by","title":"Plot seroincidence.by log-likelihoods — plot.seroincidence.by","text":"Plots log-likelihood curves stratum, seroincidence.objects","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot seroincidence.by log-likelihoods — plot.seroincidence.by","text":"","code":"# S3 method for seroincidence.by plot(x, ncol = min(3, length(x)), ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot seroincidence.by log-likelihoods — plot.seroincidence.by","text":"x '\"seroincidence.\"' object (est.incidence.()) ncol number columns use panel plots ... Arguments passed plot.seroincidence log_x x-axis logarithmic scale (TRUE) linear scale (FALSE, default)?","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot seroincidence.by log-likelihoods — plot.seroincidence.by","text":"aan object class \"ggarrange\", ggplot2::ggplot() list() ggplot2::ggplot()s.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the log-likelihood curve for the incidence rate estimate — plot.seroincidence","title":"Plot the log-likelihood curve for the incidence rate estimate — plot.seroincidence","text":"Plot log-likelihood curve incidence rate estimate","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the log-likelihood curve for the incidence rate estimate — plot.seroincidence","text":"","code":"# S3 method for seroincidence plot(x, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the log-likelihood curve for the incidence rate estimate — plot.seroincidence","text":"x seroincidence object (est.incidence()) log_x x-axis logarithmic scale (TRUE) linear scale (FALSE, default)? ... unused","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.seroincidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the log-likelihood curve for the incidence rate estimate — plot.seroincidence","text":"ggplot2::ggplot()","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.summary.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for summary.seroincidence.by objects — plot.summary.seroincidence.by","title":"Plot method for summary.seroincidence.by objects — plot.summary.seroincidence.by","text":"Plot method summary.seroincidence.objects","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.summary.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for summary.seroincidence.by objects — plot.summary.seroincidence.by","text":"","code":"# S3 method for summary.seroincidence.by plot(x, xvar, alpha = 0.7, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.summary.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for summary.seroincidence.by objects — plot.summary.seroincidence.by","text":"x summary.seroincidence.object (generated applying summary() method output est.incidence.()). xvar name stratifying variable object alpha transparency points graph (1 = transparency, 0 = fully transparent) ... unused","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/plot.summary.seroincidence.by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for summary.seroincidence.by objects — plot.summary.seroincidence.by","text":"ggplot2::ggplot() object","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for seroincidence.by Object — print.seroincidence.by","title":"Print Method for seroincidence.by Object — print.seroincidence.by","text":"Custom print() function show output seroincidence calculator est.incidence.().","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for seroincidence.by Object — print.seroincidence.by","text":"","code":"# S3 method for seroincidence.by print(x, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for seroincidence.by Object — print.seroincidence.by","text":"x list containing output function est.incidence.(). ... Additional arguments affecting summary produced.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for seroincidence.by Object — print.seroincidence.by","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- est.incidence.by(...)  # print the seroincidence object to the console print(seroincidence)  # or simply type (appropriate print method will be invoked automatically) seroincidence }"},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for seroincidence Object — print.seroincidence","title":"Print Method for seroincidence Object — print.seroincidence","text":"Custom print() function show output seroincidence calculator est.incidence().","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for seroincidence Object — print.seroincidence","text":"","code":"# S3 method for seroincidence print(x, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for seroincidence Object — print.seroincidence","text":"x list containing output function est.incidence.(). ... Additional arguments affecting summary produced.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.seroincidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for seroincidence Object — print.seroincidence","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- est.incidence.by(...)  # print the seroincidence object to the console print(seroincidence)  # or simply type (appropriate print method will be invoked automatically) seroincidence }"},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.summary.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Seroincidence Summary Object — print.summary.seroincidence.by","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence.by","text":"Custom print() function \"summary.seroincidence.\" objects (constructed summary.seroincidence.())","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.summary.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence.by","text":"","code":"# S3 method for summary.seroincidence.by print(x, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.summary.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence.by","text":"x \"summary.seroincidence.\" object (constructed summary.seroincidence.()) ... Additional arguments affecting summary produced.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/print.summary.seroincidence.by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Seroincidence Summary Object — print.summary.seroincidence.by","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- est.incidence.by(...)  # calculate summary statistics for the seroincidence object seroincidenceSummary <- summary(seroincidence)  # print the summary of seroincidence object to the console print(seroincidenceSummary)  # or simply type (appropriate print method will be invoked automatically) seroincidenceSummary }"},{"path":"https://ucd-serg.github.io/serocalculator/reference/serocalculator.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating Infection Rates from Serological Data — serocalculator","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"package translates antibody levels measured (cross-sectional) population sample estimate frequency seroconversions (infections) occur sampled population.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/serocalculator.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"Methods estimating seroincidence Teunis, P. F. M., J. C. H. van Eijkeren. \"Estimation seroconversion rates infectious diseases: Effects age noise.\" Statistics Medicine 39, . 21 (2020): 2799-2814. Teunis, P. F. M., J. C. H. van Eijkeren, W. F. de Graaf, . Bonačić Marinović, M. E. E. Kretzschmar. \"Linking seroresponse infection within-host heterogeneity antibody production.\" Epidemics 16 (2016): 33-39. Applications Aiemjoy, Kristen, Jessica C. Seidman, Senjuti Saha, Sira Jam Munira, Mohammad Saiful Islam Sajib, Syed Muktadir Al Sium, Anik Sarkar et al. \"Estimating typhoid incidence community-based serosurveys: multicohort study.\" Lancet Microbe 3, . 8 (2022): e578-e587. Aiemjoy, Kristen, John Rumunu, Juma John Hassen, Kirsten E. Wiens, Denise Garrett, Polina Kamenskaya, Jason B. Harris et al. \"Seroincidence enteric fever, Juba, South Sudan.\" Emerging infectious diseases 28, . 11 (2022): 2316. Monge, S., Teunis, P. F., Friesema, ., Franz, E., Ang, W., van Pelt, W., Mughini-Gras, L. \"Immune response-eliciting exposure Campylobacter vastly exceeds incidence clinically overt campylobacteriosis associated similar risk factors: nationwide serosurvey Netherlands\" Journal Infection, 2018, 1--7, doi:10.1016/j.jinf.2018.04.016 Kretzschmar, M., Teunis, P. F., Pebody, R. G. \"Incidence reproduction numbers pertussis: estimates serological social contact data five European countries\" PLoS Medicine 7, . 6 (June 1, 2010):e1000291. doi:10.1371/journal.pmed.1000291. Simonsen, J., Strid, M. ., Molbak, K., Krogfelt, K. ., Linneberg, ., Teunis, P. \"Sero-epidemiology tool study incidence Salmonella infections humans\" Epidemiology Infection 136, . 7 (July 1, 2008): 895--902. doi:10.1017/S0950268807009314 Simonsen, J., Teunis, P. F., van Pelt, W., van Duynhoven, Y., Krogfelt, K. ., Sadkowska-Todys, M., Molbak K. \"Usefulness seroconversion rates comparing infection pressures countries\" Epidemiology Infection, April 12, 2010, 1--8. doi:10.1017/S0950268810000750. Falkenhorst, G., Simonsen, J., Ceper, T. H., van Pelt, W., de Valk, H., Sadkowska-Todys, M., Zota, L., Kuusi, M., Jernberg, C., Rota, M. C., van Duynhoven, Y. T., Teunis, P. F., Krogfelt, K. ., Molbak, K. \"Serological cross-sectional studies salmonella incidence eight European countries: correlation incidence reported cases\" BMC Public Health 12, . 1 (July 15, 2012): 523--23. doi:10.1186/1471-2458-12-523. Teunis, P. F., Falkenhorst, G., Ang, C. W., Strid, M. ., De Valk, H., Sadkowska-Todys, M., Zota, L., Kuusi, M., Rota, M. C., Simonsen, J. B., Molbak, K., Van Duynhoven, Y. T., van Pelt, W. \"Campylobacter seroconversion rates selected countries European Union\" Epidemiology Infection 141, . 10 (2013): 2051--57. doi:10.1017/S0950268812002774. de Melker, H. E., Versteegh, F. G., Schellekens, J. F., Teunis, P. F., Kretzschmar, M. \"incidence Bordetella pertussis infections estimated population combination serological surveys\" Journal Infection 53, . 2 (August 1, 2006): 106--13. doi:10.1016/j.jinf.2005.10.020 Quantification seroresponse de Graaf, W. F., Kretzschmar, M. E., Teunis, P. F., Diekmann, O. \"two-phase within-host model immune response application serological profiles pertussis\" Epidemics 9 (2014):1--7. doi:10.1016/j.epidem.2014.08.002. Berbers, G. ., van de Wetering, M. S., van Gageldonk, P. G., Schellekens, J. F., Versteegh, F. G., Teunis, P.F. \"novel method evaluating natural vaccine induced serological responses Bordetella pertussis antigens\" Vaccine 31, . 36 (August 12, 2013): 3732--38. doi:10.1016/j.vaccine.2013.05.073. Versteegh, F. G., Mertens, P. L., de Melker, H. E., Roord, J. J., Schellekens, J. F., Teunis, P. F. \"Age-specific long-term course IgG antibodies pertussis toxin symptomatic infection Bordetella pertussis\" Epidemiology Infection 133, . 4 (August 1, 2005): 737--48. Teunis, P. F., van der Heijden, O. G., de Melker, H. E., Schellekens, J. F., Versteegh, F. G., Kretzschmar, M. E. \"Kinetics IgG antibody response pertussis toxin infection B. pertussis\" Epidemiology Infection 129, . 3 (December 10, 2002):479. doi:10.1017/S0950268802007896.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/serocalculator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimating Infection Rates from Serological Data — serocalculator","text":"Peter Teunis p.teunis@emory.edu Doug Ezra Morrison demorrison@ucdavis.edu Kristen Aiemjoy kaiemjoy@ucdavis.edu Kristina Lai kwlai@ucdavis.edu","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/sim.cs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a cross-sectional serosurvey with noise — sim.cs","title":"Simulate a cross-sectional serosurvey with noise — sim.cs","text":"Makes cross-sectional data set (age, y(t) set) adds noise, desired.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/sim.cs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a cross-sectional serosurvey with noise — sim.cs","text":"","code":"sim.cs(   lambda,   n.smpl,   age.rng,   age.fx = NA,   antigen_isos,   n.mc = 0,   renew.params = FALSE,   add.noise = FALSE,   curve_params,   noise_limits,   ... )"},{"path":"https://ucd-serg.github.io/serocalculator/reference/sim.cs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a cross-sectional serosurvey with noise — sim.cs","text":"lambda numeric() scalar indicating incidence rate (events per person-years) n.smpl number samples simulate age.rng age range sampled individuals, years age.fx specify curve parameters use age (nothing present?) antigen_isos Character vector one antibody names. Values must match curve_params. n.mc many MCMC samples use: n.mc 1:4000 fixed posterior sample used n.mc = 0, random sample chosen renew.params whether generate new parameter set infection renew.params= TRUE generates new parameter set infection renew.params = FALSE keeps one selected birth, updates baseline y0 add.noise logical() indicating whether add biological measurement noise curve_params data.frame() containing MCMC samples parameters Bayesian posterior distribution longitudinal decay curve model. parameter columns must named: antigen_iso: character() vector indicating antigen-isotype combinations iter: integer() vector indicating MCMC sampling iterations y0: baseline antibody level $t=0$ ($y(t=0)$) y1: antibody peak level (ELISA units) t1: duration infection alpha: antibody decay rate (1/days current longitudinal parameter sets) r: shape factor antibody decay noise_limits biologic noise distribution parameters ... additional arguments passed simcs.tinf()","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/sim.cs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a cross-sectional serosurvey with noise — sim.cs","text":"tibble::tibble() containing simulated cross-sectional serosurvey data, columns: age: age (days) one column element antigen_iso input argument","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract strata from an object — strata","title":"Extract strata from an object — strata","text":"Generic method extracting strata objects. See strata.seroincidence.()","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract strata from an object — strata","text":"","code":"strata(x)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract strata from an object — strata","text":"x object","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract strata from an object — strata","text":"strata x","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information about strata from a seroincidence.by object — strata.seroincidence.by","title":"Extract information about strata from a seroincidence.by object — strata.seroincidence.by","text":"Extract information strata seroincidence.object","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information about strata from a seroincidence.by object — strata.seroincidence.by","text":"","code":"# S3 method for seroincidence.by strata(x)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information about strata from a seroincidence.by object — strata.seroincidence.by","text":"x seroincidence.object (est.incidence.())","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/strata.seroincidence.by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information about strata from a seroincidence.by object — strata.seroincidence.by","text":"tibble::tibble() strata rows","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/sub-.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or replace parts of a seroincidence.by object — [.seroincidence.by","title":"Extract or replace parts of a seroincidence.by object — [.seroincidence.by","text":"Extract replace parts seroincidence.object","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/sub-.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or replace parts of a seroincidence.by object — [.seroincidence.by","text":"","code":"# S3 method for seroincidence.by [(x, i, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/sub-.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or replace parts of a seroincidence.by object — [.seroincidence.by","text":"x object subset/replace elements indices subset/replace ... passed [.list","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/sub-.seroincidence.by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or replace parts of a seroincidence.by object — [.seroincidence.by","text":"subset specified","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.by.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for ","title":"Summary Method for ","text":"Calculate seroincidence output seroincidence calculator est.incidence.().","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for ","text":"","code":"# S3 method for seroincidence.by summary(   object,   confidence_level = 0.95,   showDeviance = TRUE,   showConvergence = TRUE,   ... )"},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for ","text":"object dataframe containing output function est.incidence.(). confidence_level desired confidence interval coverage probability showDeviance Logical flag (FALSE/TRUE) reporting deviance (-2*log(likelihood) estimated seroincidence. Default = TRUE. showConvergence Logical flag (FALSE/TRUE) reporting convergence (see help optim() details). Default = FALSE. ... Additional arguments affecting summary produced.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for ","text":"summary.seroincidence.object, tibble::tibble, following columns: incidence.rate maximum likelihood estimate lambda (seroincidence) CI.lwr lower confidence bound lambda CI.upr upper confidence bound lambda Deviance (included showDeviance = TRUE) Negative log likelihood (NLL) estimated (maximum likelihood) lambda) nlm.convergence.code (included showConvergence = TRUE) Convergence information returned stats::nlm() object also following metadata (accessible base::attr()): antigen_isos Character vector names input antigen isotypes used est.incidence.() Strata Character names strata used est.incidence.()","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for ","text":"","code":"if (FALSE) { # estimate seroincidence seroincidence <- est.incidence.by(...)  # calculate summary statistics for the seroincidence object seroincidenceSummary <- summary(seroincidence) }"},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize a fitted incidence model — summary.seroincidence","title":"summarize a fitted incidence model — summary.seroincidence","text":"summarize fitted incidence model","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize a fitted incidence model — summary.seroincidence","text":"","code":"# S3 method for seroincidence summary(object, coverage = 0.95, ...)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize a fitted incidence model — summary.seroincidence","text":"object list(), outputted stats::nlm() est.incidence() coverage desired confidence interval coverage probability ... unused","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/summary.seroincidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize a fitted incidence model — summary.seroincidence","text":"tibble::tibble() containing following: est.start: starting guess incidence rate ageCat: age category analyzing incidence.rate: estimated incidence rate, per person year CI.lwr: lower limit confidence interval incidence rate CI.upr: upper limit confidence interval incidence rate coverage: coverage probability log.lik: log-likelihood data used call est.incidence(), evaluated maximum-likelihood estimate lambda (.e., incidence.rate) iterations: number iterations used antigen_isos: list antigen isotypes used analysis nlm.convergence.code: information convergence likelihood maximization procedure performed nlm() (see \"Value\" section stats::nlm(), component code); codes 3-5 indicate issues: 1: relative gradient close zero, current iterate probably solution. 2: successive iterates within tolerance, current iterate probably solution. 3: Last global step failed locate point lower x. Either x approximate local minimum function, function non-linear algorithm, stepmin est.incidence() (.k.., steptol stats::nlm()) large. 4: iteration limit exceeded; increase iterlim. 5: maximum step size stepmax exceeded five consecutive times. Either function unbounded , becomes asymptotic finite value direction stepmax small.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/warn.missing.strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Warn about missing stratifying variables in a dataset — warn.missing.strata","title":"Warn about missing stratifying variables in a dataset — warn.missing.strata","text":"Warn missing stratifying variables dataset","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/warn.missing.strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warn about missing stratifying variables in a dataset — warn.missing.strata","text":"","code":"warn.missing.strata(data, strata, dataname)"},{"path":"https://ucd-serg.github.io/serocalculator/reference/warn.missing.strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warn about missing stratifying variables in a dataset — warn.missing.strata","text":"data dataset contain strata strata data.frame() showing strata levels expected dataset dataname name dataset, use warning messages strata missing.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/warn.missing.strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warn about missing stratifying variables in a dataset — warn.missing.strata","text":"character() vector subset stratifying variables present pop_data","code":""},{"path":"https://ucd-serg.github.io/serocalculator/reference/warn.missing.strata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Warn about missing stratifying variables in a dataset — warn.missing.strata","text":"","code":"if (FALSE) { expected_strata = data.frame(Species = \"banana\", type = \"orchid\") warn.missing.strata(iris, expected_strata, dataname = \"iris\") }"},{"path":"https://ucd-serg.github.io/serocalculator/news/index.html","id":"serocalculator-032","dir":"Changelog","previous_headings":"","what":"serocalculator 0.3.2","title":"serocalculator 0.3.2","text":"Fixed bug passing antigen_isos est.incidence.() est.incidence().","code":""},{"path":"https://ucd-serg.github.io/serocalculator/news/index.html","id":"serocalculator-031","dir":"Changelog","previous_headings":"","what":"serocalculator 0.3.1","title":"serocalculator 0.3.1","text":"Rolled back required R version 4.2 4.1","code":""},{"path":"https://ucd-serg.github.io/serocalculator/news/index.html","id":"serocalculator-030","dir":"Changelog","previous_headings":"","what":"serocalculator 0.3.0","title":"serocalculator 0.3.0","text":"Fixed stability documentation-clarity issues initial tester feedback.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/news/index.html","id":"serocalculator-020-never-formally-incremented-in-description","dir":"Changelog","previous_headings":"","what":"serocalculator 0.2.0 (never formally incremented in DESCRIPTION)","title":"serocalculator 0.2.0 (never formally incremented in DESCRIPTION)","text":"Added new vignettes.","code":""},{"path":"https://ucd-serg.github.io/serocalculator/news/index.html","id":"serocalculator-010","dir":"Changelog","previous_headings":"","what":"serocalculator 0.1.0","title":"serocalculator 0.1.0","text":"Forking seroincidence package adding Teunis et al 2020 approach.","code":""}]
